<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-06-20T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>IDCFクラウド】cloudstack-apiで仮想マシンにパブリックIPを付与する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/20/associate-a-publicip-to-the-virtualmachine-by-cloudstack-api.html"/>
    <id>http://blog.url.com/2016/06/20/associate-a-publicip-to-the-virtualmachine-by-cloudstack-api.html</id>
    <published>2016-06-20T09:00:00+09:00</published>
    <updated>2016-06-20T12:09:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回、&lt;a href="http://qiita.com/kooohei/items/7690b526edf453fc15d6"&gt;【IDCFクラウド】cloudstack-apiで仮想マシンを作成する。&lt;/a&gt;では&lt;em&gt;cloudstack-api&lt;/em&gt;コマンドで仮想マシンを作成しました。&lt;br&gt;
今回はその続編として、作成した仮想マシンにパブリックIPを付与したいと思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="事前確認"&gt;事前確認&lt;/h2&gt;

&lt;p&gt;まずは現在のパブリックIPを確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------+
|    ipaddress    |
+-----------------+
| ***.***.***.*** |
+-----------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="パブリックipの取得"&gt;パブリックIPの取得&lt;/h2&gt;

&lt;p&gt;パブリックIPの取得は&lt;code&gt;associateIpAddress&lt;/code&gt;コマンドで行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api associateIpAddress \
 --zoneid a53ff3d3-042b-4cbd-ad16-494bb8d33e06
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "associateipaddressresponse": {
    "id": "061c31aa-aa41-4e03-a274-83b17b58c1a3",
    "jobid": "b32b867c-07d4-412e-b514-94a1eee62ed1"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--zoneid&lt;/td&gt;
&lt;td&gt;ゾーンID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;簡単に説明すると、&lt;/p&gt;

&lt;p&gt;「&lt;em&gt;radian&lt;/em&gt;ゾーンにパブリックIPを割り当てる（取得する）」&lt;/p&gt;

&lt;p&gt;という内容になります。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;先ほどの&lt;code&gt;listPublicIpAddresses&lt;/code&gt;コマンドで確認してみましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress,id,virtualmachinename
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+--------------------------------------+--------------------+
|   ipaddress    |                  id                  | virtualmachinename |
+----------------+--------------------------------------+--------------------+
| 210.129.19.191 | 061c31aa-aa41-4e03-a274-83b17b58c1a3 | None               |
| ***.***.***.***| ********-****-****-****-************ | None               |
+----------------+--------------------------------------+--------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;210.129.19.191&lt;/code&gt; のIPが割り当てられているのが確認できました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="nat設定"&gt;NAT設定&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;取得が確認できたら次はNATの設定です。&lt;br&gt;
パブリックIPを仮想マシンへ割り当てます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api enableStaticNat \
--ipaddressid 061c31aa-aa41-4e03-a274-83b17b58c1a3 \
--virtualmachineid b1230e50-f75b-4343-8d6e-ca7a4efcf2b0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "enablestaticnatresponse": {
    "success": "true"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--ipaddressid&lt;/td&gt;
&lt;td&gt;パブリックIPアドレスID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--virtualmachineid&lt;/td&gt;
&lt;td&gt;仮想マシンID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;戻り値で&lt;code&gt;&amp;quot;success&amp;quot;: &amp;quot;true&amp;quot;&lt;/code&gt;となっていれば完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;先ほど実行した戻り値でも確認はできていますが、一応&lt;code&gt;listPublicIpAddresses&lt;/code&gt;コマンドでも確認しましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress,id,virtualmachinename,virtualmachinedisplayname
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+--------------------------------------+--------------------+----------+---------------------------+
|   ipaddress    |                  id                  | virtualmachinename | hostname | virtualmachinedisplayname |
+----------------+--------------------------------------+--------------------+----------+---------------------------+
| 210.129.19.191 | 061c31aa-aa41-4e03-a274-83b17b58c1a3 | test-host          | None     | create-test               |
| ***.***.***.***| ********-****-****-****-************ | None               | None     | None                      |
+----------------+--------------------------------------+--------------------+----------+---------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで、先ほど取得したパブリックIPアドレスが割り当てられているのを確認できました。&lt;br&gt;
ここで出力している項目ですが&lt;em&gt;virtualmachinename&lt;/em&gt;はサーバ自身の&lt;em&gt;hostname&lt;/em&gt;となります。コンソールで表示される「仮想マシン名」は&lt;em&gt;virtualmachinedisplayname&lt;/em&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;仮想マシンにパブリックIPが付与されたのでこれで外部との通信経路が用意されました。&lt;br&gt;
ですが実はまだ通信はできません。。。FWで許可されていないからです。&lt;br&gt;
ということで、次回はFWの設定をcloudstack-apiで行いたいと思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JavaScript、jQueryについてまとめ</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/15/javascript&amp;jQuery.html"/>
    <id>http://blog.url.com/2016/06/15/javascript&amp;jQuery.html</id>
    <published>2016-06-15T09:00:00+09:00</published>
    <updated>2016-06-20T11:54:27+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回の記事でvalidationを使ったフォームチェックの実装について紹介しましたが、&lt;br&gt;
そもそもJavaScriptってなんだろうというところ、まとめました。&lt;/p&gt;

&lt;p&gt;以前から耳にすることはあったし、プログラミング言語なんだろうな、くらいの認識はありましたが、詳しいことはまったく知らなかったので。&lt;/p&gt;

&lt;p&gt;いい機会なので備忘録として簡単にまとめてみます。&lt;/p&gt;

&lt;h1 id="javascriptとは"&gt;JavaScriptとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;主にWebページに組み込まれたプログラムをWebブラウザ上で実行するために用いられるプログラミング言語の一つ。&lt;br&gt;
サイト構築で使われる多くの言語とは使用される場所が違い、クライアントサイドで動く言語です。&lt;br&gt;
サーバサイドは、サーバの中で実行されますが、クライアントサイドはユーザのブラウザ上で、&lt;br&gt;
ブラウザの更新の必要なく実行することができる。&lt;/p&gt;

&lt;p&gt;JavaScriptはサーバサイドで利用することもできるそうです。&lt;/p&gt;

&lt;p&gt;主な働きとして、webページに動きをつけるために用いられ、クリックやタップ時のページ上の挙動の制御やアニメーションの実行、フォームのエラーチェックなどで活躍します。&lt;br&gt;
&lt;a href="http://press.share-wis.com/why-you-should-learn-javascript"&gt;http://press.share-wis.com/why-you-should-learn-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;サーバ側で処理することなくwebページに動きのある動作をつけることができるんですね。&lt;/p&gt;

&lt;p&gt;現在はパソコン自体もスペックが上がってきているため、&lt;br&gt;
ブラウザが処理を行ってもそれほど負担にもならず、むしろサーバ側の負担がかからないように、ブラウザ上でできる処理はそこで実行させてしまう、という構成が多くなってきている。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id="jqueryとは"&gt;jQueryとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptで作られたプログラムで、JavaScriptよりも扱いやすくしたファイル。&lt;br&gt;
JavaScriptのライブラリで、&lt;br&gt;
よく利用されるスクリプトを簡単にまとめたもの。&lt;br&gt;
同じ動きを実現させる場合でも、複雑なJavaScriptのコードを書かなくてもライブラリを用いることによりもっと簡単にJavaScriptを使うことができるのです。&lt;/p&gt;

&lt;p&gt;ライブラリを利用することにより、開発効率もあがり、時間短縮もできてしまうのでとても便利ですね。&lt;/p&gt;

&lt;p&gt;jQueryの主な機能としては&lt;/p&gt;

&lt;p&gt;・DOM（Document Object Model）：HTMLを操作する&lt;br&gt;
・アニメーション：要素をアニメーションさせる&lt;br&gt;
・Ajax：外部ファイルをダイナミックに読み込む&lt;/p&gt;

&lt;p&gt;その他にも様々な機能があり、JSライブラリの中でも代表的なライブラリ。&lt;/p&gt;

&lt;p&gt;先日jQuery 3.0版のリリースもありましたね！&lt;br&gt;
3.0版ではIE8以前のものは動作しなくなっているようです。&lt;br&gt;
&lt;a href="https://osdn.jp/magazine/16/06/13/183000"&gt;https://osdn.jp/magazine/16/06/13/183000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;他にもJavaScriptのライブラリはたくさんあり、その年によりトレンドもあるようです。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.buildinsider.net/web/popularjslib/2016"&gt;http://www.buildinsider.net/web/popularjslib/2016&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="終わりに"&gt;終わりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;まだまだ入り口に過ぎませんが、今まで何気なく利用していたwebサイトですがクライアントサイドだけでこんなに動きのあるものが実装されているなんて意識していませんでした。&lt;/p&gt;

&lt;p&gt;これを機に少しずつ知識を深めていきたいです。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>【IDCFクラウド】cloudstack-apiで仮想マシンを作成する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/14/make-virtual-machine-by-cloudstack-api.html"/>
    <id>http://blog.url.com/2016/06/14/make-virtual-machine-by-cloudstack-api.html</id>
    <published>2016-06-14T09:00:00+09:00</published>
    <updated>2016-06-14T12:42:54+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;cloudstack-apiで仮想マシンの構築を行いたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="基本情報"&gt;基本情報&lt;/h2&gt;

&lt;p&gt;ということで、今回は以下の情報をもとに仮想マシンのを作成を行います。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;項目　　　　　　　&lt;/th&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ゾーン　　　　　　　　　&lt;/td&gt;
&lt;td&gt;radian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;インスタンス&lt;/td&gt;
&lt;td&gt;light.S1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;テンプレート&lt;/td&gt;
&lt;td&gt;Ubuntu Server 14.04 LTS 64-bit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;10.13.0.50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所属グループ&lt;/td&gt;
&lt;td&gt;test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ホスト名&lt;/td&gt;
&lt;td&gt;test-name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ディスプレイ名&lt;/td&gt;
&lt;td&gt;create-test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;キーペア&lt;/td&gt;
&lt;td&gt;hogehoge&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="事前確認"&gt;事前確認&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;仮想マシンを作成する前にまず、現在IDCFクラウドでの稼働状況を確認しておきたいと思います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listVirtualMachines -t name
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;no data found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;現在、環境内には１台も仮想マシンが作成されていないため&lt;em&gt;no data found&lt;/em&gt;となっています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="仮想マシンの作成"&gt;仮想マシンの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;それでは仮想マシンを作成しましょう。&lt;/p&gt;

&lt;p&gt;作成には&lt;code&gt;createInstanceGroup&lt;/code&gt;を利用します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api deployVirtualMachine \
--zoneid a53ff3d3-042b-4cbd-ad16-494bb8d33e06 \
--serviceofferingid e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6 \
--templateid 6eee3f7d-2193-4df7-81d5-bc2169ac3380 \
--ipaddress 10.13.0.50 \
--name test-host \
--keypair hogehoge \
--displayname create-test \
--group test
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "deployvirtualmachineresponse": {
    "id": "b1230e50-f75b-4343-8d6e-ca7a4efcf2b0",
    "jobid": "dee8c58d-069a-408a-98c3-03ea1e4e3c50"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回指定したオプションについての説明は以下のとおりです。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--zoneid&lt;/td&gt;
&lt;td&gt;ゾーン環境ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--serviceofferingid&lt;/td&gt;
&lt;td&gt;インスタンスID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--templateid&lt;/td&gt;
&lt;td&gt;テンプレートのID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ipaddress&lt;/td&gt;
&lt;td&gt;IPアドレス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--name&lt;/td&gt;
&lt;td&gt;ホスト名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--keypair&lt;/td&gt;
&lt;td&gt;デフォルト(root)で利用するキーペア&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--displayname&lt;/td&gt;
&lt;td&gt;コンソール画面で表示される名前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--group&lt;/td&gt;
&lt;td&gt;仮想マシンが所属するグループ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;簡単に説明すると、&lt;/p&gt;

&lt;p&gt;・&lt;em&gt;ipaddress&lt;/em&gt;オプションで仮想マシンに&lt;code&gt;10.13.0.50&lt;/code&gt;のIPアドレスを付与&lt;br&gt;
・SSHログインするために必要なデフォルトキーは&lt;code&gt;hogehoge&lt;/code&gt;を配置&lt;br&gt;
・&lt;em&gt;name&lt;/em&gt;オプションでSSHログインした際に表示されるホスト名を&lt;code&gt;test-host&lt;/code&gt;に設定&lt;/p&gt;

&lt;p&gt;といった内容になります。&lt;/p&gt;

&lt;p&gt;また、仮想マシンに直接影響はありませんが、&lt;/p&gt;

&lt;p&gt;・&lt;em&gt;group&lt;/em&gt;オプションで仮想マシンを&lt;code&gt;test&lt;/code&gt;にグルーピング&lt;br&gt;
・&lt;em&gt;diplayname&lt;/em&gt;オプションでコンソール画面での表示を&lt;code&gt;create-test&lt;/code&gt;に設定&lt;/p&gt;

&lt;p&gt;を行っています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="確認"&gt;確認&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;確認はコンソールおよびコマンドでも可能です。&lt;/p&gt;

&lt;h3 id="コンソール画面で確認"&gt;コンソール画面で確認&lt;/h3&gt;

&lt;p&gt;&lt;img alt="cloudstack-api_createvm01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/39962077-6be0-39ff-bba7-87d00e4823b7.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="コマンドで確認"&gt;コマンドで確認&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listVirtualMachines -t name,keypair,displayname,group
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------+----------+-------------+-------+
|    name   | keypair  | displayname | group |
+-----------+----------+-------------+-------+
| test-host | hogehoge | create-test | test  |
+-----------+----------+-------------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;今回、仮想マシンを作成しましたが、このままではグローバルIPが無いため外部との通信ができません。&lt;br&gt;
次回は仮想マシンをグローバルIPに付与するところをcloudstack-apiコマンドで行いたいと思います。&lt;br&gt;
&lt;a href="http://qiita.com/kooohei/items/524c1d5b4e541c695c06"&gt;&amp;gt;&amp;gt;【IDCFクラウド】cloudstack-apiで仮想マシンにパブリックIPを付与する。&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ミネラル醤(ひしお)講座</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/09/hisio-seminer.html"/>
    <id>http://blog.url.com/2016/06/09/hisio-seminer.html</id>
    <published>2016-06-09T09:00:00+09:00</published>
    <updated>2016-06-14T12:33:23+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="醤(ひしお)講座を開催しました！"&gt;醤(ひしお)講座を開催しました！&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;講師は弊社COOでもあり醸せ師のあき先生！！&lt;/p&gt;

&lt;p&gt;わたしは数ヶ月前に受講済みなのですが、&lt;br&gt;
さらに知識を深めるべく参加させて頂きました。&lt;/p&gt;

&lt;p&gt;醤は味噌と醤油の原型ともいえる、発酵食の基礎のようなもの。&lt;br&gt;
火を入れずそのまま使えば醤油の味、火を通せば味噌の味！&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;醤の歴史からはじまり、麹のお話、醤の活用法、&lt;br&gt;
などなど盛りだくさん！興味深いお話に皆さん聞き入っていました。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;そして最後はお待ちかねの醤づくり！&lt;br&gt;
完成までは２週間かかるので、それぞれお持ち帰り頂き、&lt;br&gt;
お家で引き続き醤さんを育てて頂きます！完成がたのしみですね！&lt;br&gt;
今回材料の中にドテラ社のミネラルを加えました。&lt;br&gt;
とっても贅沢です！&lt;br&gt;
1日たってみて、前回に比べ醤の成長具合が早い気がしています。&lt;br&gt;
やはりミネラルの力なのでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;img alt="醤講座" src="/images/./2016/0610_hisio_seminar/hisio.jpeg" /&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;また皆さんが他に気にされていたのが普段使う調味料について。&lt;br&gt;
お醤油、みりん、お酒、塩、砂糖...etc&lt;/p&gt;

&lt;p&gt;日常的に使うものだからこそ、ちゃんとしたものを使いたい&lt;br&gt;
という思いを皆さん持たれているようでした。&lt;br&gt;
&lt;br&gt;&lt;br&gt;
食は私たちの生活の中で一番基本となるもの。&lt;br&gt;
健康にいい！！という食品や情報があふれている世の中で、&lt;br&gt;
自分にとって家族にとって何が一番有益であるのか、&lt;br&gt;
情報を選択する上でしっかりとした情報を得ることは&lt;br&gt;
とても大切なこと。&lt;/p&gt;

&lt;p&gt;ご興味ある方は是非一度弊社までお問い合わせください！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>子供乗せ自転車を購入！</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/07/bicycle.html"/>
    <id>http://blog.url.com/2016/06/07/bicycle.html</id>
    <published>2016-06-07T09:00:00+09:00</published>
    <updated>2016-06-14T12:33:23+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;最近、子供乗せ用の電動自転車を購入しました！&lt;br&gt;
普段から保育園へは歩き＆抱っこで行っているんですが、近距離とは言え、&lt;br&gt;
坂が多いのでけっこうキツイんです…&lt;br&gt;
子供も大きくなって抱っこする手も限界。&lt;br&gt;
歩くといってもまだまだ寄り道も多くて時間がかかる。&lt;/p&gt;

&lt;p&gt;と言うことで購入に踏み切りました。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id="車種選び"&gt;車種選び&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id="メーカーは？"&gt;メーカーは？&lt;/h2&gt;

&lt;p&gt;子供乗せとして販売されているメーカーは主に３つ！&lt;/p&gt;

&lt;p&gt;・Panasonic&lt;br&gt;
 ・BRIDGESTONE&lt;br&gt;
 ・YAMAHA&lt;/p&gt;

&lt;p&gt;実際見てみると、どのメーカーのものもデザイン性以外目立って変わりがないです(笑)&lt;br&gt;
自転車屋さんの店員さんにメーカーごとの違いを聞いてみるも、&lt;br&gt;
性能については大差ないですー。とのこと。&lt;/p&gt;

&lt;p&gt;特にYAMAHAとBRIDGESTONEはお互い部品供給し合っているので尚更。&lt;br&gt;
違いをあげるとすればデザイン性。&lt;br&gt;
性能については最初の漕ぎ出しがPanasonicが一番スムーズだ、というママの意見が多いとのこと。&lt;br&gt;
またメーカーというより商品によりますが、乗車適用身長というものがあるので身長が低め、&lt;br&gt;
という方はその辺りの確認も必要。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id="前乗せか後ろ乗せか"&gt;前乗せか後ろ乗せか&lt;/h2&gt;

&lt;p&gt;これはその時のお子さんの成長にあったものを選ぶことになります。&lt;br&gt;
前乗せは15㌔まで。年齢としては1歳以上〜4歳未満。&lt;br&gt;
後ろ乗せは推奨2歳〜6歳未満。&lt;/p&gt;

&lt;p&gt;前乗せメリット・デメリット&lt;br&gt;
・普通ならかごが来る位置にシートが着いているので漕いでいる時ひざ　が当たることがない。&lt;br&gt;
・前乗せ専用シートはがっちりしていてホールド感がしっかりしている。&lt;br&gt;
・専用シートを使える期間が短い&lt;br&gt;
・かごがない&lt;/p&gt;

&lt;p&gt;後ろ乗せメリット・デメリット&lt;br&gt;
・前乗せする場合のオプションシートの作りが簡易的。&lt;br&gt;
・前乗せシートをつけると、漕いでいる時足があたる可能性あり。&lt;br&gt;
・かごがついている&lt;br&gt;
&lt;br&gt;&lt;br&gt;
息子は2歳2ヵ月体重12㌔なので前乗せ、後ろ乗せどちらでもいけます。&lt;br&gt;
ただ、前乗せだとすぐに後ろ乗せをオプションで追加&lt;br&gt;
することになりそう。。&lt;br&gt;
あとは今後2人目を考えるなら、下の子を乗せることになる前乗せシートが&lt;br&gt;
しっかりしてるものの方がいいかなー？と迷いました。&lt;br&gt;
が、散々悩んで後ろ乗せにしました！&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id="車輪の大きさ(車高の高さ)"&gt;車輪の大きさ(車高の高さ)&lt;/h2&gt;

&lt;p&gt;車輪の大きさ、26cmと20cmがあります。&lt;br&gt;
ママが乗ってる子供乗せって街で見かけるものは大半車輪が小さく車高が低いですよね？&lt;br&gt;
車高が低い方が確かに子供の乗降が楽です！&lt;br&gt;
車輪が小さいからといって漕ぎにくさや進み具合に大差はないそう。&lt;/p&gt;

&lt;p&gt;ここは迷わず20cmに。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id="選んだ車種は"&gt;選んだ車種は&lt;/h2&gt;

&lt;p&gt;候補としては、&lt;br&gt;
Panasonicギュットアニーズ、ギュットミニDX、YAMAHAのpas baby。&lt;/p&gt;

&lt;p&gt;&lt;img alt="子供の乗せ自転車" src="/images/./2016/0607_bicycle/anyys.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="子供の乗せ自転車" src="/images/./2016/0607_bicycle/miniDX.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="子供の乗せ自転車" src="/images/./2016/0607_bicycle/pasbaby.png" /&gt;&lt;/p&gt;

&lt;p&gt;と言うことで我が家が選んだのは、&lt;br&gt;
Panasonicギュットアニーズ！&lt;/p&gt;

&lt;p&gt;ただこのギュットアニーズ、バッテリー容量が8Ahなんです。&lt;br&gt;
12Ahのバッテリーを積んでいる車種もあるので、小さいかなーと&lt;br&gt;
アニーズかpasbabyXLで悩みましたが、&lt;br&gt;
我が家の場合保育園の送迎と、近場への買い物くらいなので、8Ahで十分だろうということに。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id="迷っている人は店頭試乗もおすすめ"&gt;迷っている人は店頭試乗もおすすめ&lt;/h2&gt;

&lt;p&gt;購入店では試乗はしていないのですが、以前別のお店でPanasonicのギュットミニDXと&lt;br&gt;
BRIDGESTONEのbikkeに試乗しました。&lt;br&gt;
この時のお店の人もPanasonicの方が漕ぎ出しのアシストがスムーズだと言っていましたが、&lt;br&gt;
乗ってみて確かに！と実感。&lt;br&gt;
試乗はいい検討材料になりますよ。アニーズは試乗してないですが(笑)&lt;br&gt;
迷っている人は試乗のできるお店に行ってみるといいと思います！&lt;/p&gt;

&lt;p&gt;うちの息子も一緒に試乗しましたが、意外にも全く泣かず、楽しかったようで&lt;br&gt;
『もう一回！』と降りてくれませんでしたー。&lt;br&gt;
　試乗をするとこんな風にお子さんの反応を見ることもできます。　&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id="いざ購入へ-意外な盲点"&gt;いざ購入へ 意外な盲点&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;いざお店で取り寄せ依頼！となったのですが、なんとメーカー在庫がない！！&lt;br&gt;
製造待ちになるので納期は8月頃になるとか、、&lt;br&gt;
第2希望としていたpasbabyXLについては9月納期、、&lt;/p&gt;

&lt;p&gt;電動自転車は毎年2月頃に新機種が発売されるそうで、やはり入園シーズンの3、4月頃が&lt;br&gt;
1番売れる時期だそうです。&lt;br&gt;
5月頃にはだんだん品薄になってくるのかもしれませんね。&lt;/p&gt;

&lt;p&gt;今後購入を検討される方は購入時期は早めがおすすめですよー。&lt;/p&gt;

&lt;p&gt;ネットではまだ在庫があるお店も多数ありましたが、ネットで自転車を購入するのも&lt;br&gt;
ちょっと抵抗があり、、近所の自転車屋さんの系列店にあったラ&lt;br&gt;
スト１台をなんとかゲット！！&lt;br&gt;
念願の電動自転車ーーー！&lt;br&gt;
実はまだ乗れてはいませんが、、今からとっても楽しみです。&lt;br&gt;
これで快適に保育園の通園ができるはず！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AWS S3バケットに独自ドメインを割り当てる。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/06/assign-your-own-domain-to-the-aws-s3-bucket.html"/>
    <id>http://blog.url.com/2016/06/06/assign-your-own-domain-to-the-aws-s3-bucket.html</id>
    <published>2016-06-06T09:00:00+09:00</published>
    <updated>2016-06-14T12:33:12+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;AWS S3に作成したバケットに対して独自ドメインの割り当てを行います。&lt;/p&gt;

&lt;p&gt;これによって静的サイトであればS3のみで完結するため、そこら辺のサーバーを動かすよりも低コストで高安定なサイト運営が可能となります。&lt;/p&gt;

&lt;h2 id="前提条件"&gt;前提条件&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;今回利用する独自ドメインがRoute53にてドメイン管理できることを前提に行います。
また、今回割り当てるドメインは「hogehoge.hengjiu.jp」で行います。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="バケットの作成---s3"&gt;バケットの作成 - S3&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;・S3の「バケットを作成」で新規にバケットを作成します。&lt;br&gt;
&lt;img alt="s3_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/72f93b5a-c551-b7bc-7bb9-bf2423206291.png" /&gt;&lt;/p&gt;

&lt;p&gt;・作成したバケットのプロパティで「ウェブサイトのホスティングを有効にする」に変更して保存します。&lt;br&gt;
&lt;img alt="s3_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/1251fb2c-2e53-a280-36c8-77361267f69f.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="ドメイン登録---route53"&gt;ドメイン登録 - Route53&lt;/h1&gt;

&lt;p&gt;・Route 53のHosted zones で対象のDomain Nameをクリックします。&lt;br&gt;
&lt;img alt="route53_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/1214fea9-685d-02f7-5fd5-8c249b676388.png" /&gt;&lt;/p&gt;

&lt;p&gt;・Create Record Setをクリックします。&lt;br&gt;
&lt;img alt="route53_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/ea7ff1e8-4f73-dd82-360f-007c955afd1e.png" /&gt;&lt;/p&gt;

&lt;p&gt;・Nameにサブドメイン(hogehoge)を入力し、AliasをYesにしてAlias Target入力状態にするとS3で作成したバケット名「hogehoge.hengjiu.jp」が表示されるので、それを選択して「Create」をします。&lt;br&gt;
&lt;img alt="route53_03.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/a6859d8d-4df8-a564-f4f2-939aee13ba24.png" /&gt;&lt;/p&gt;

&lt;p&gt;以上で完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;S3バケットに独自ドメインを割り当てるためには「バケット名は割り当てるドメイン名と同じにする」ということに注意が必要です。&lt;/p&gt;

&lt;p&gt;もし、レコード作成時に作成したバケットが表示されない(&lt;em&gt;No Targets Available&lt;/em&gt;)場合は、&lt;/p&gt;

&lt;p&gt;・作成したバケットの名前間が違う。&lt;br&gt;
・ウェブサイトホストティングが有効になっていない。&lt;/p&gt;

&lt;p&gt;などが考えられるのでもう一度確認してみてください。&lt;/p&gt;

&lt;p&gt;また、割り当てる際の作業手順は今回説明したように（S3でバケット作成 → Route53でレコード登録）で行うが良いと思います。&lt;br&gt;
ですが、どうしても先にレコード登録をする必要がある場合は、Alias Targetに「s3-website-ap-northeast-1.amazonaws.com.」を入力すれば事前に作成しておくことが可能です。&lt;/p&gt;
</content>
  </entry>
</feed>
