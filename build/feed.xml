<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-07-25T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>静的ルーティングの設定 - Linux</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/25/static-route.html"/>
    <id>http://blog.url.com/2016/07/25/static-route.html</id>
    <published>2016-07-25T09:00:00+09:00</published>
    <updated>2016-07-25T11:01:26+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;p&gt;AWSではルートテーブルがあるので設定することはないですが、そう言ったルーティングを管理する機能がない場合は自分で設定を行わなければなりません。&lt;br&gt;
ということでルーティングの設定についてまとめてみました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="事前確認"&gt;事前確認&lt;/h1&gt;

&lt;p&gt;とりあえず&lt;code&gt;netstat&lt;/code&gt;コマンドで現在のルーティングの状態を確認しておきます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ netstat -nr
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         10.13.0.1       0.0.0.0         UG        0 0          0 eth0
10.13.0.0       0.0.0.0         255.255.248.0   U         0 0          0 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="ルーティングの追加"&gt;ルーティングの追加&lt;/h1&gt;

&lt;p&gt;ルーティングの追加には一時的または永続的の２通りあります。コマンドでの追加、設定ファイルへ記載しての追加です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="一時的な追加"&gt;一時的な追加&lt;/h2&gt;

&lt;p&gt;一時的な追加はコマンドでの追加となります。ここでは&lt;code&gt;route&lt;/code&gt;コマンドと&lt;code&gt;ip&lt;/code&gt;コマンドの２通りを紹介します。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="routeコマンド"&gt;routeコマンド&lt;/h3&gt;

&lt;h4 id="・networkの追加"&gt;・networkの追加&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo route add -net 172.31.0.0 gw 10.13.0.145 netmask 255.255.0.0 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="・hostの追加"&gt;・hostの追加&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo route add -host 172.31.0.10 gw 10.13.0.145 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;network&lt;/em&gt;に比べて&lt;em&gt;host&lt;/em&gt;は&lt;code&gt;-net&lt;/code&gt;が&lt;code&gt;-host&lt;/code&gt;になるのと、&lt;code&gt;netmask&lt;/code&gt;が不要になります。&lt;br&gt;
また、&lt;code&gt;eth0&lt;/code&gt; は無くても大丈夫です。その場合は任意でルーティングが設定できる&lt;em&gt;eth&lt;/em&gt;で設定されます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="ipコマンド"&gt;ipコマンド&lt;/h3&gt;

&lt;h5 id="・networkの追加"&gt;・networkの追加&lt;/h5&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo ip route add 172.31.0.0/16 via 10.13.0.145 dev eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id="・hostの追加"&gt;・hostの追加&lt;/h5&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo ip route add 172.31.0.10/32 via 10.13.0.145 dev eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでの&lt;em&gt;network&lt;/em&gt;と&lt;em&gt;host&lt;/em&gt;の違いは&lt;em&gt;netmask&lt;/em&gt;だけです。&lt;em&gt;host&lt;/em&gt;の場合は&lt;code&gt;/32&lt;/code&gt;にするだけです。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="永続的な追加"&gt;永続的な追加&lt;/h2&gt;

&lt;p&gt;コマンドで一時的に追加しただけではサーバー再起動などをしてしまうと消えてしまいます。&lt;br&gt;
そこで再起動してもルーティングが消えない設定を紹介します。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="ubuntu-の場合"&gt;Ubuntu の場合&lt;/h3&gt;

&lt;h4 id="・その１"&gt;・その１&lt;/h4&gt;

&lt;p&gt;ひとつ目は&lt;code&gt;/etc/network/if-up.d/static-routes&lt;/code&gt;で設定する方法です。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo vi /etc/network/if-up.d/static-routes
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
/sbin/route add -net 172.31.0.0 gw 10.13.0.145 netmask 255.255.0.0 dev eth0 // networkの場合
/sbin/route add -host 172.31.0.10 gw 10.13.0.145 eth0 // hostの場合
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo chmod +x /etc/network/if-up.d/static-routes
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo /etc/network/if-up.d/static-routes
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="・その２"&gt;・その２&lt;/h4&gt;

&lt;p&gt;もう一つの方法は&lt;code&gt;/etc/network/interfaces&lt;/code&gt;に設定する方法です。&lt;br&gt;
&lt;code&gt;post-up&lt;/code&gt;を使うと任意のコマンドが実行できるようになります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp
    post-up route add -net 172.31.0.0/16 gw 10.13.0.145  // networkの場合
    post-up route add -host 172.31.0.10/32 gw 10.13.0.145  // hostの場合
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="centos-の場合"&gt;CentOS の場合&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat /etc/sysconfig/network-scripts/route-eth0 
# Static route for metadata service
172.31.0.0/16 via 10.13.0.145 dev eth0 // networkの場合
172.31.0.10/32 via 10.13.0.145 dev eth0 // hostの場合
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo /etc/init.d/network restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もし&lt;code&gt;route-eth0&lt;/code&gt;の&lt;code&gt;0&lt;/code&gt;の部分は設定したい&lt;em&gt;eth&lt;/em&gt;によって変えてください。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;ということで追加した後の設定は以下の状態になります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ netstat -nr
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         10.13.0.1       0.0.0.0         UG        0 0          0 eth0
10.13.0.0       0.0.0.0         255.255.248.0   U         0 0          0 eth0
172.31.0.0      10.13.0.145     255.255.0.0     UG        0 0          0 eth0
172.31.0.10     10.13.0.145     255.255.255.255 UGH       0 0          0 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="ルーティングの削除"&gt;ルーティングの削除&lt;/h1&gt;

&lt;p&gt;ルーティングの削除にも一時的または永続的の２通りあります。コマンドでの削除は一時的なものですが。永続的に削除をしたい場合は設定ファイルの記載から削除してあげる必要があります。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="一時的な削除"&gt;一時的な削除&lt;/h2&gt;

&lt;p&gt;一時的な削除は追加の時と同じでコマンドで行います。ここでも&lt;code&gt;route&lt;/code&gt;コマンドと&lt;code&gt;ip&lt;/code&gt;コマンドの２通りを紹介します。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="routeコマンド"&gt;routeコマンド&lt;/h3&gt;

&lt;h4 id="・networkの削除"&gt;・networkの削除&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo route add -net 172.31.0.0 gw 10.13.0.145 netmask 255.255.0.0 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="・hostの削除"&gt;・hostの削除&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo route add -host 172.31.0.10 gw 10.13.0.145 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;追加の時と同じで、&lt;em&gt;network&lt;/em&gt;と&lt;em&gt;host&lt;/em&gt;の違いは&lt;code&gt;-net&lt;/code&gt;が&lt;code&gt;-host&lt;/code&gt;になるのと、&lt;code&gt;netmask&lt;/code&gt;が不要になるところです。&lt;code&gt;eth0&lt;/code&gt;の箇所も無くても大丈夫です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="ipコマンド"&gt;ipコマンド&lt;/h3&gt;

&lt;h4 id="・networkの削除"&gt;・networkの削除&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo ip route del 172.31.0.0/16
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="・hostの削除"&gt;・hostの削除&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo ip route del 172.31.0.10/32
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こちらも追加と同じで&lt;em&gt;host&lt;/em&gt;の場合は&lt;em&gt;netmask&lt;/em&gt;を&lt;code&gt;/32&lt;/code&gt;にするだけです。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="永続的な削除"&gt;永続的な削除&lt;/h2&gt;

&lt;p&gt;ただ、追加した箇所を削除するだけですので割愛します。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;永続的な設定の場合も&lt;code&gt;netstat&lt;/code&gt;で確認するとコマンドで追加した場合と同様の状態と取ります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ netstat -nr
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         10.13.0.1       0.0.0.0         UG        0 0          0 eth0
10.13.0.0       0.0.0.0         255.255.248.0   U         0 0          0 eth0
172.31.0.0      10.13.0.145     255.255.0.0     UG        0 0          0 eth0
172.31.0.10     10.13.0.145     255.255.255.255 UGH       0 0          0 eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;p&gt;今までのルーティングの設定は各サーバーに設定しなければならないので、台数が多くなればなるほど大変でした。&lt;br&gt;
そういった煩雑さを軽くしてくれたAWSのルートテーブルは本当に便利だなと思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>OGPの設定 Part2</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/21/facebookSARE3.html"/>
    <id>http://blog.url.com/2016/07/21/facebookSARE3.html</id>
    <published>2016-07-21T09:00:00+09:00</published>
    <updated>2016-07-25T10:55:41+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回から引き続きfacebookのOGP設定についてです。&lt;br&gt;
前回、大方設定したOGP情報が反映されるところまでいきましたが、、&lt;br&gt;
記事ごとのOGPデータの設定がうまくいかない。という所でつまずきました。&lt;/p&gt;

&lt;p&gt;&lt;img alt="OGP設定" src="/images/./2016/0721_facebookSHARE3/OGP_5.png" /&gt;&lt;/p&gt;

&lt;p&gt;今回はなんとかして記事ごとにOGPの取得をしてもらえるように設定したい！&lt;/p&gt;

&lt;h1 id="middleman-ogpを使う"&gt;Middleman-OGPを使う&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;突然ですが、、&lt;br&gt;
実はこのProudBlog、middlemanのブログ機能を使って作られています。&lt;/p&gt;

&lt;p&gt;そのため、色々と調べてみた結果、今回はMiddleman-OGPというプラグインを利用しました。&lt;br&gt;
プラグインを入れて、の作業なったので、社長に設定をしてもらいました！&lt;br&gt;
なので、すみません、、詳細な設定内容は省きます＞＜&lt;br&gt;
(ここが一番気になりますよね。汗)&lt;/p&gt;

&lt;p&gt;内容についてはこの辺りのサイトを参考にしています。&lt;br&gt;
&lt;a href="http://whiskers.nukos.kitchen/2015/04/10/middleman-ogp.html"&gt;http://whiskers.nukos.kitchen/2015/04/10/middleman-ogp.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ただ上記プラグイン導入の他にも色々と手を加えて、加えて、、、&lt;br&gt;
設定をしてもらい、ようやく理想通りの形ができあがりましたー！！&lt;/p&gt;

&lt;p&gt;肝心な手順部分の内容が薄くなってしまいました...&lt;br&gt;
せっかくなのでMiddlemanと静的サイトについて備忘録としてまとめておきます。&lt;/p&gt;

&lt;h1 id="middlemanとは"&gt;Middlemanとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img alt="OGP設定" src="/images/./2016/0721_facebookSHARE3/middleman_1.png" /&gt;&lt;/p&gt;

&lt;p&gt;Middlemanとはruby製の静的サイトジェネレーター。&lt;br&gt;
静的なwebサイトを構築する際に便利なコマンドラインツール。&lt;/p&gt;

&lt;p&gt;日本語のドキュメントもあります。&lt;br&gt;
&lt;a href="https://middlemanapp.com/jp/"&gt;https://middlemanapp.com/jp/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;日本語ドキュメントがあるのはありがたいですね！&lt;/p&gt;

&lt;p&gt;この他にmiddlemanのメリットが書かれたサイトを見つけました。&lt;br&gt;
&lt;a href="http://www.mdesign-works.com/blog/web/static-site-genareter/"&gt;http://www.mdesign-works.com/blog/web/static-site-genareter/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・開発用サーバがある&lt;br&gt;
・共通のレイアウト設定やファイルをパーツ化できる&lt;br&gt;
・変数が使える&lt;/p&gt;

&lt;p&gt;※上記はサイトから抜粋したものです&lt;/p&gt;

&lt;h2 id="静的サイトジェネレーター（static-site-generator）とは"&gt;静的サイトジェネレーター（Static Site Generator）とは&lt;/h2&gt;

&lt;p&gt;記事を書いたテキストファイルを元に、HTMLを生成してくれる、&lt;br&gt;
静的サイトを効率的に制作するためのツール。&lt;/p&gt;

&lt;p&gt;middlemanの他にも&lt;br&gt;
Hugo、jekllyといったものが有名どころのようです。&lt;/p&gt;

&lt;p&gt;静的サイトは、指定したパスに設置してあるhtmlファイルを表示させ、&lt;br&gt;
何度読み込んでも同じ内容を表示させます。&lt;br&gt;
まさに動きのない、静的なサイト。&lt;/p&gt;

&lt;p&gt;HTMLファイルを表示させるだけなので、表示速度も高速。&lt;br&gt;
尚且つサーバ負荷も最小限で済みます。&lt;br&gt;
構成がシンプルで、更新頻度の少ないサイトには向いています。&lt;/p&gt;

&lt;p&gt;サイトを簡単に作る上で多く利用されているのが、CMS(content management system)。&lt;br&gt;
なかでもwordpressは代表的なCMS。&lt;br&gt;
CMSは静的サイトと異なり、DBサーバも必要になるので、前述したようにシンプルな&lt;br&gt;
構成のサイトは静的サイトで構築するほうが色々とメリットがあるかもしれません。&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;実際に自分がmiddlemanを一から設定する作業をやったわけではないのですが、&lt;br&gt;
このブログを更新する上で一つ一つの作業はいたってシンプル。&lt;br&gt;
一定の規則に従って記事を書いてアップするだけ！&lt;br&gt;
ただ、中の構成がどうなっているのかわからないので、ブログのトップ画像を変えたい、今回のようにfacebookのogp設定をしたいとった時は&lt;br&gt;
分かる人に聞いたり、やってもらったりしないといけないので、&lt;br&gt;
社内向け、個人利用が主になってしまうのかな。&lt;br&gt;
お客さん向けに提供するには難しいかもしれません。&lt;/p&gt;

&lt;p&gt;とは言え、サーバレスも注目されている中でmiddlemanのようなツールを&lt;br&gt;
使ったサイトはこれからどんどん増えていくかも！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AmazonLinuxにswapを作成する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/19/how-to-make-a-swap-for-the-amazonlinux.html"/>
    <id>http://blog.url.com/2016/07/19/how-to-make-a-swap-for-the-amazonlinux.html</id>
    <published>2016-07-19T09:00:00+09:00</published>
    <updated>2016-07-19T10:58:10+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Amazon Linux&lt;/em&gt;に2048MBのスワップを作成する作業を行います。&lt;/p&gt;

&lt;p&gt;その前にまずスワップとは、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;スワップとは、ハードディスクなどの補助記憶装置を利用して使用可能なメモリ容量を増やすOSの機能の一つ。－ IT用語辞典(e-Words)より抜粋&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;つまり今回で言うとEBSボリュームの一部をメモリとして扱えるようにした領域のことです。&lt;/p&gt;

&lt;p&gt;ということで作成してみます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="事前確認"&gt;事前確認&lt;/h1&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ free -m
             total       used       free     shared    buffers     cached
Mem:           491        353        138          0          8        294
-/+ buffers/cache:         49        442
Swap:            0          0          0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ swapon -s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="スワップ領域の作成"&gt;スワップ領域の作成&lt;/h1&gt;

&lt;p&gt;まず、&lt;code&gt;dd&lt;/code&gt;コマンドでスワップ用の領域を確保します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo dd if=/dev/zero of=/swapfile bs=1024 count=2048k
2097152+0 レコード入力
2097152+0 レコード出力
2147483648 バイト (2.1 GB) コピーされました、 32.0676 秒、 67.0 MB/秒
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo chmod 600 /swapfile 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成したら&lt;code&gt;mkswap&lt;/code&gt;でスワップを作成します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo mkswap /swapfile 
mkswap: /swapfile: warning: wiping old swap signature.
スワップ空間バージョン1を設定します、サイズ = 2097148 KiB
ラベルはありません, UUID=88c217dc-d8e0-42f9-b2bc-eb814505b5e3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上で作成が完了しました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="スワップ領域の有効化"&gt;スワップ領域の有効化&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;mkswap&lt;/code&gt;で作成しただけでは利用できません。スワップの作成ができたら&lt;code&gt;swapon&lt;/code&gt;でスワップ領域の有効化をします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo swapon /swapfile 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ free -m
             total       used       free     shared    buffers     cached
Mem:           491        485          6          0          4        421
-/+ buffers/cache:         59        432
Swap:         2047          0       2047
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ swapon -s
Filename                Type        Size    Used    Priority
/swapfile                               file    2097148 0   -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="スワップ領域の無効化"&gt;スワップ領域の無効化&lt;/h1&gt;

&lt;p&gt;スワップ領域の有効化は&lt;code&gt;swapon&lt;/code&gt;ですが、無効化は&lt;code&gt;swapoff&lt;/code&gt;で行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo swapoff /swapfile 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="自動マウント設定"&gt;自動マウント設定&lt;/h1&gt;

&lt;p&gt;毎回コマンドでスワップを有効化するのは大変ですので、起動時に自動マウントするように&lt;em&gt;/etc/fstab&lt;/em&gt;に追記しておきます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo vi /etc/fstab
/swapfile   none        swap    defaults        0   0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考：&lt;a href="https://wiki.archlinuxjp.org/index.php/Fstab"&gt;Arch Linux - fstab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以上で完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;p&gt;かつての物理サーバでは、コストや仕様などの理由で利用出来るメモリに制限がありました。&lt;br&gt;
ただ、今ではクラウドを利用することによって&lt;strong&gt;swapを作成するならそれ以上にメモリを積む&lt;/strong&gt;であったり、&lt;strong&gt;一台あたりのパワーを求めるよりスケールアウト&lt;/strong&gt;という発想の方が効率的になってきたこともありswapの利用する場面が少なくなっています。&lt;br&gt;
とはいえ、&lt;strong&gt;いざという時のswap&lt;/strong&gt;はあっても損じゃないかなと個人的には思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CentOS HVM方式のルートボリュームを拡張する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/11/to-expand-the-root-volume-of-centos-hvm-system.html"/>
    <id>http://blog.url.com/2016/07/11/to-expand-the-root-volume-of-centos-hvm-system.html</id>
    <published>2016-07-11T09:00:00+09:00</published>
    <updated>2016-07-19T10:39:43+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;p&gt;AWS Marketplaceにある&lt;strong&gt;「CentOS 6 (x86_64) - with Updates HVM」&lt;/strong&gt;を利用してインスタンスを作成する際、インスタンス作成時の「ストレージの追加」でルートボリュームを増やしたとしてもOSから見えるボリュームは変わりません。&lt;/p&gt;

&lt;p&gt;今回、ルートボリュームサイズを30GiBに拡張したいと思います。&lt;br&gt;
&lt;img alt="2016-06-20.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/644e1a43-3062-087f-7e9f-41cbab1b9833.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      7.8G  666M  6.7G   9% /
tmpfs           498M     0  498M   0% /dev/shm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ただ、アタッチされているボリュームサイズについて確認してみると、&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ lsblk 
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  30G  0 disk 
└─xvda1 202:1    0   8G  0 part /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;割り当てられてはいるけどパーティションの拡張ができていない状態のようです。&lt;br&gt;
AMIがHVM方式のを選択すると、このように自動的に拡張されない場合があるようです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;hr&gt;

&lt;h2 id="hvmとは"&gt;HVMとは&lt;/h2&gt;

&lt;p&gt;HVMとは「Hardware-assited VM」の略で、日本語では完全仮想化と言われています。&lt;br&gt;
EC2ユーザーガイドの説明には以下のように記載されています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;HVM AMI&lt;/strong&gt;&lt;br&gt;
HVM AMI は、完全に仮想化された一連のハードウェアを備えており、イメージのルートブロックデバイスのマスターブートレコードを実行することによって起動します。この仮想化タイプでは、ベアメタルハードウェア上でオペレーティングシステムが動作するのと同様に、修正を行わなくても仮想マシン上でオペレーティングシステムを直接実行することができます。Amazon EC2 ホストシステムでは、ゲストに提供されている基盤となるハードウェアの一部またはすべてがエミュレートされます。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;
&lt;/blockquote&gt;

&lt;p&gt;ということでパーティションの拡張をしたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="準備"&gt;準備&lt;/h1&gt;

&lt;p&gt;まずはじめに、&lt;em&gt;dracut-modules-growroot&lt;/em&gt;と&lt;em&gt;cloud-utils-growpart&lt;/em&gt;この２つのパッケージをインストールします。&lt;/p&gt;

&lt;p&gt;ただ、これらのパッケージはデフォルトのリポジトリからは取得できないのでリポジトリを追加します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo yum install wget

$ wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

$ sudo rpm -i epel-release-6-8.noarch.rpm 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでは&lt;code&gt;wget&lt;/code&gt;コマンドがインストールされていなかったので、初めにインストールしています。&lt;/p&gt;

&lt;p&gt;それでは今回の作業に必要なパッケージをインストールします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo yum install dracut-modules-growroot

・・・省略・・・
Installed:
  dracut-modules-growroot.noarch 0:0.20-2.el6                                                                       

Dependency Installed:
  cloud-utils-growpart.x86_64 0:0.27-10.el6                                                                         

Complete!

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上で準備完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="拡張"&gt;拡張&lt;/h1&gt;

&lt;p&gt;それでは拡張作業を行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo dracut --force --add growroot /boot/initramfs-$(uname -r).img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで行っているのは&lt;em&gt;--add&lt;/em&gt;オプションを使って&lt;em&gt;initramfs-2.6.32-573.18.1.el6.x86_64.img&lt;/em&gt;のイメージファイルにgrowrootモジュールを追加しています。&lt;br&gt;
2.6.32-573.18.1.el6.x86_64は&lt;code&gt;uname -r&lt;/code&gt;コマンドで取得される値です。&lt;/p&gt;

&lt;p&gt;少し間がありプロンプトが返ってきたら完了です。それではサーバーを再起動します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;hr&gt;

&lt;h2 id="dracutとは"&gt;dracutとは&lt;/h2&gt;

&lt;p&gt;dracutなんて普段見慣れない方が多いかと思います。ということで&lt;a href="https://dracut.wiki.kernel.org/index.php/Main_Page"&gt;Dracut Wiki（by The Linux Kernel Organization）&lt;/a&gt;によると、、、&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2 id="dracut"&gt;dracut&lt;/h2&gt;

&lt;p&gt;dracut is an event driven initramfs infrastructure. dracut (the tool) is used to create an initramfs image by copying tools and files from an installed system and combining it with the dracut framework, usually found in /usr/lib/dracut/modules.d. .....&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;つまりは「initramfsを作成するコマンド」みたいです。（かなりざっくりですみません。。。）&lt;br&gt;
今回の場合&lt;em&gt;--add&lt;/em&gt;オプションでdraucutモジュールのgrowrootをイメージに追加しています。&lt;br&gt;
&lt;em&gt;--force&lt;/em&gt;オプションはすでに存在しているinitramfsに対して上書きする場合に指定します。&lt;/p&gt;

&lt;p&gt;その他にdracutについて知りたい場合は以下を参考にしてください。&lt;br&gt;
・&lt;a href="http://linux.die.net/man/8/dracut"&gt;dracut(8) - Linux man page&lt;/a&gt;：コマンドオプションについて色々説明しています。&lt;br&gt;
・&lt;a href="https://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html"&gt;dracut - www.kernel.org&lt;/a&gt;：利用例などについて説明しています。&lt;/p&gt;

&lt;hr&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="確認"&gt;確認&lt;/h1&gt;

&lt;p&gt;それではボリュームを確認してみます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      985G  735M  934G   1% /
tmpfs           498M     0  498M   0% /dev/shm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OSから無事認識されているのが確認できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ lsblk 
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvda    202:0    0 1000G  0 disk 
└─xvda1 202:1    0 1000G  0 part /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;lsblk&lt;/code&gt;コマンドでもパーティションが割り当てたボリュームまで拡張されているのが確認できました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;p&gt;今回の拡張作業で&lt;code&gt;dracut&lt;/code&gt;コマンドを利用していますが、実際は&lt;code&gt;dracut&lt;/code&gt;コマンドが拡張するコマンドではありません。&lt;br&gt;
ボリュームの拡張は&lt;code&gt;growpart&lt;/code&gt;によって行われています。それを&lt;code&gt;yum&lt;/code&gt;でインストールし&lt;code&gt;dracut&lt;/code&gt;で追加した&lt;code&gt;growroot&lt;/code&gt;をイメージに追加することで、起動時に&lt;code&gt;growpart&lt;/code&gt;が実行され、パーティションが割り当てたボリュームまで拡張されます。&lt;br&gt;
また、&lt;code&gt;growpart&lt;/code&gt;コマンドも今回はインストールされていなかったのですが、&lt;code&gt;yum&lt;/code&gt;を使うと&lt;em&gt;dracut-modules-growroot&lt;/em&gt;の依存関係で&lt;em&gt;cloud-utils-growpart&lt;/em&gt;もインストールしてくれるため利用できるようになります。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ミネラル甘酒講座</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/08/amazakekouza.html"/>
    <id>http://blog.url.com/2016/07/08/amazakekouza.html</id>
    <published>2016-07-08T09:00:00+09:00</published>
    <updated>2016-07-11T10:39:41+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="ミネラル甘酒講座を開催しました！"&gt;ミネラル甘酒講座を開催しました！&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;先日、醸せ師あき先生によるミネラル甘酒講座が開催されました！&lt;br&gt;
沢山の方にお越し頂き大盛況の講座でした。&lt;br&gt;
皆様ありがとうございました。&lt;/p&gt;

&lt;p&gt;&lt;img alt="甘酒講座" src="/images/./2016/0708_amazakekouza/amazakekouza7.jpg" /&gt;&lt;br&gt;
&lt;img alt="甘酒講座" src="/images/./2016/0708_amazakekouza/amazakekouza4.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;甘酒と言っても、よくお正月に神社で配られている酒粕を使った甘酒ではなく、&lt;br&gt;
米麹を使った甘酒です！&lt;br&gt;
もちろんアルコールは入っていないので、小さなお子様でも大丈夫。&lt;/p&gt;

&lt;p&gt;私は以前、甘酒とフルーツを合わせたフルーツ甘酒を頂いたことがあるのですが、&lt;br&gt;
本当においしかったです！&lt;/p&gt;

&lt;p&gt;今回は試食として、&lt;br&gt;
・３種の甘酒シャーベット&lt;br&gt;
・ノンシュガーの発酵スイートポテト&lt;br&gt;
をあき先生がご用意してくださったそうです。&lt;br&gt;
とっても美味しそうですね〜〜♪&lt;/p&gt;

&lt;p&gt;わたしも参加したかったです...(涙)&lt;/p&gt;

&lt;p&gt;&lt;img alt="甘酒講座" src="/images/./2016/0708_amazakekouza/amazakekouza5.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="甘酒講座" src="/images/./2016/0708_amazakekouza/amazakekouza3.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;次回は9月にお味噌の講座を開催予定です！&lt;br&gt;
気になる方は是非お問い合わせください〜！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>13本の薬箱講座</title>
    <link rel="alternate" href="http://blog.url.com/2016/07/06/kusuribako.html"/>
    <id>http://blog.url.com/2016/07/06/kusuribako.html</id>
    <published>2016-07-06T09:00:00+09:00</published>
    <updated>2016-07-11T10:39:41+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="植物エッセンスの薬箱®13本講座"&gt;植物エッセンスの薬箱®13本講座&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;先日弊社新宿オフィスにて、あき先生による13本の薬箱講座が開催されました！&lt;/p&gt;

&lt;p&gt;&lt;img alt="薬箱講座" src="/images/./2016/0706_kusuribako/kusuribako_02.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;利用するオイルはドテラ社のエッセンシャルオイル♪&lt;br&gt;
ドテラのエッセンシャルオイルはCPTG（認定純粋セラピー等級）の基準をクリアした、とても質の高いオイルです。&lt;br&gt;
だからこそ、香る、塗る、飲む色々な方法で活用できます！&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.doterraeveryday.jp/training/cptg/"&gt;CPTGとは&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記写真のようにドテラのオイルはたくさんあるのですが、&lt;br&gt;
このたくさんあるオイルの中でもこの講座では使いやすい13本のオイルについてご紹介しています。&lt;br&gt;
実際にオイルを香ってみたり、塗ってみたり、体験しながら学ぶことができるので、&lt;br&gt;
これからエッセンシャルオイル使ってみようかな？興味がある、という方にオススメの講座です。&lt;/p&gt;

&lt;p&gt;また自分でお好きな香りを選んで、香るクリームも作れちゃいます！&lt;br&gt;
たくさんのエッセンシャルオイルの中から自分好みの香りを作り出す...とっても楽しいですよ〜♪&lt;/p&gt;

&lt;p&gt;&lt;img alt="薬箱講座" src="/images/./2016/0706_kusuribako/kusuribako_0629_1.jpg" /&gt;&lt;br&gt;
&lt;img alt="薬箱講座" src="/images/./2016/0706_kusuribako/kusuribako_0629_2.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;素敵な香りに癒されて、エッセンシャルオイルに魅了されてしまいます！&lt;br&gt;
今後も定期的に開催予定なので、気になる方はぜひお問い合わせ下さい！&lt;/p&gt;
</content>
  </entry>
</feed>
