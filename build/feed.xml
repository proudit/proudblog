<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-06-27T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>【IDCFクラウド】cloudstack-apiでFWの設定をする。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/27/setting-the-fw-in-the-cloudstack-api.html"/>
    <id>http://blog.url.com/2016/06/27/setting-the-fw-in-the-cloudstack-api.html</id>
    <published>2016-06-27T09:00:00+09:00</published>
    <updated>2016-06-27T14:16:43+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回&lt;a href="http://qiita.com/kooohei/items/524c1d5b4e541c695c06"&gt;【IDCFクラウド】cloudstack-apiで仮想マシンにパブリックIPを付与する。&lt;/a&gt;を行いました。&lt;br&gt;
さらにその前の回(前々回)では&lt;a href="http://blog.proudit.jp/2016/06/14/make-virtual-machine-by-cloudstack-api.html"&gt;【IDCFクラウド】cloudstack-apiで仮想マシンを作成する。&lt;/a&gt;を行いました。&lt;br&gt;
これよって「仮想マシンを作成し、パブリックIPの付与」まで完了しました。&lt;br&gt;
ただ、これでは外部との通信ができません。IDCFクラウドのFWはホワイトリスト方式のため、必要なポートを指定して開けてあげる必要があります。&lt;br&gt;
ということで、今回は&lt;em&gt;cloudstack-api&lt;/em&gt;コマンドでFWの設定を行います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="事前確認"&gt;事前確認&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;まずは現在のFW状況を確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listFirewallRules --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e -t ipaddress,startport,endport,protocol,ciderlist,id
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;no data found
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center"&gt;オプション&lt;/th&gt;
&lt;th style="text-align: center"&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--ipaddressid&lt;/td&gt;
&lt;td style="text-align: center"&gt;パブリックIPアドレス&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;指定したパブリックIPに何もFWの設定がないため&lt;code&gt;no data found&lt;/code&gt;となっています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="fwルールの作成"&gt;FWルールの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;FWルールの作成は&lt;code&gt;createFirewallRule&lt;/code&gt;コマンドで行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api createFirewallRule --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e --protocol TCP --startport 80 --endport 80
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "createfirewallruleresponse": {
    "id": "f47780b8-0507-4b10-9c8c-0ff08d0456ac",
    "jobid": "61c80d83-6e0b-4302-b004-738dbc40ba59"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それではもう一度FWの設定を確認してみましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listFirewallRules --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e -t ipaddress,startport,endport,protocol,ciderlist,id
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+-----------+---------+----------+-----------+--------------------------------------+
|   ipaddress    | startport | endport | protocol | ciderlist |                  id                  |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
| 210.129.22.172 | 80        | 80      | tcp      | None      | f47780b8-0507-4b10-9c8c-0ff08d0456ac |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;80番ポートが解放されたのが確認できました。&lt;/p&gt;

&lt;p&gt;FWの解放は範囲を指定して行うことができます。その場合は&lt;em&gt;--startport&lt;/em&gt;の値に始まりとなるポート番号、&lt;em&gt;--endport&lt;/em&gt;に終わりとなるポート番号を指定します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api createFirewallRule --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e --protocol TCP --startport 8000 --endport 8100
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "createfirewallruleresponse": {
    "id": "a3d25f8c-ebd0-458c-b86b-49cfcb6592d1",
    "jobid": "aeaa1a60-a754-40bb-8bc0-142fa7eee3a5"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listFirewallRules --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e -t ipaddress,startport,endport,protocol,ciderlist,id
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+-----------+---------+----------+-----------+--------------------------------------+
|   ipaddress    | startport | endport | protocol | ciderlist |                  id                  |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
| 210.129.22.172 | 80        | 80      | tcp      | None      | f47780b8-0507-4b10-9c8c-0ff08d0456ac |
| 210.129.22.172 | 8000      | 8100    | tcp      | None      | a3d25f8c-ebd0-458c-b86b-49cfcb6592d1 |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、特定IPのみを許可する場合は&lt;em&gt;--cidrlist&lt;/em&gt;を使います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api createFirewallRule --ipaddressid e72d0249-b3e1-4841-9463-2f56ee9964f5 --protocol TCP --startport 22 --endport 22 --***.***.***.***/32
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "createfirewallruleresponse": {
    "id": "2fa54ca1-0ed9-4bd3-a977-a0b1bb5f19cc",
    "jobid": "109e9497-36bc-4250-84ca-bb9a8d89796c"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listFirewallRules --ipaddressid e72d0249-b3e1-4841-9463-2f56ee9964f5 -t ipaddress,startport,endport,protocol,ciderlist,id
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+-----------+---------+----------+-----------+--------------------------------------+
|   ipaddress    | startport | endport | protocol | ciderlist |                  id                  |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
| 210.129.22.172 | 22        | 22      | tcp      | None      | 2fa54ca1-0ed9-4bd3-a977-a0b1bb5f19cc |
| 210.129.22.172 | 80        | 80      | tcp      | None      | f47780b8-0507-4b10-9c8c-0ff08d0456ac |
| 210.129.22.172 | 8000      | 8100    | tcp      | None      | a3d25f8c-ebd0-458c-b86b-49cfcb6592d1 |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下、利用したオプションについてです。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center"&gt;オプション&lt;/th&gt;
&lt;th style="text-align: center"&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--ipaddressid&lt;/td&gt;
&lt;td style="text-align: center"&gt;パブリックIPアドレスID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--protocol&lt;/td&gt;
&lt;td style="text-align: center"&gt;プロトコル(TCP/UDP)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--startport&lt;/td&gt;
&lt;td style="text-align: center"&gt;スタートポート&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--endport&lt;/td&gt;
&lt;td style="text-align: center"&gt;エンドポート&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--cidrlist&lt;/td&gt;
&lt;td style="text-align: center"&gt;許可IP及びNW&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="fwルールの削除"&gt;FWルールの削除&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;作成したFWルールの削除は&lt;code&gt;deleteFirewallRule&lt;/code&gt;コマンドで行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api deleteFirewallRule --id a3d25f8c-ebd0-458c-b86b-49cfcb6592d1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "deletefirewallruleresponse": {
    "jobid": "cf419432-24dc-404c-a4bf-8b478cfdf9ff"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center"&gt;オプション&lt;/th&gt;
&lt;th style="text-align: center"&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;--id&lt;/td&gt;
&lt;td style="text-align: center"&gt;FWルールID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listFirewallRules --ipaddressid 8ac2bf54-e238-43b2-89be-4bec101d694e -t ipaddress,startport,endport,protocol,ciderlist,id
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+-----------+---------+----------+-----------+--------------------------------------+
|   ipaddress    | startport | endport | protocol | ciderlist |                  id                  |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
| 210.129.22.172 | 22        | 22      | tcp      | None      | 2fa54ca1-0ed9-4bd3-a977-a0b1bb5f19cc |
| 210.129.22.172 | 80        | 80      | tcp      | None      | f47780b8-0507-4b10-9c8c-0ff08d0456ac |
+----------------+-----------+---------+----------+-----------+--------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;削除されました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;　FWルールはあくまでも&lt;strong&gt;パブリックIPアドレス&lt;/strong&gt;に対して行う設定です。なのでプライベートIPに対しては行えません。&lt;br&gt;
もしプライベートネットワーク間での設定を行いたい場合は各サーバでiptablesの設定を行う必要があります。&lt;br&gt;
　また、今回設定したFWルールは&lt;strong&gt;「仮想マシンにNAT接続している限り有効」&lt;/strong&gt;という点にも注意が必要です。&lt;br&gt;
一旦、IPの割り当てを解除してしまうと、そのパブリックIPに設定したFWルールは全て消えてしまいます。&lt;br&gt;
そのためFW設定を行う際は&lt;strong&gt;「IPは使いまわせても、FWルールは使い回せない」&lt;/strong&gt;ということに気をつけておきましょう。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>facebookへのシェアができない！？〜アプリ設定の方法〜</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/24/facebookSARE1.html"/>
    <id>http://blog.url.com/2016/06/24/facebookSARE1.html</id>
    <published>2016-06-24T09:00:00+09:00</published>
    <updated>2016-06-24T16:16:08+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;このPloudBlogについていたfacebookへのシェア機能、実は今までちゃんと&lt;br&gt;
機能していませんでした(汗)&lt;/p&gt;

&lt;p&gt;どういう状態だったかというと...シェアをクリックすると！&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;アプリが設定されていません: This app is still in development mode, and you don't have access to it. Switch to a registered test user or ask an app admin for permissions.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というエラーが出ていたんです...(´°ω°)ﾁｰﾝ&lt;/p&gt;

&lt;p&gt;実は、サイトをシェアするには、サイト側のコードにfacebookで取得したコードを書き込むことに加え、サイトとfacebookをリンクさせる必要があるのです！&lt;/p&gt;

&lt;h1 id="アプリ設定の仕方"&gt;アプリ設定の仕方&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;まず、以下サイトへアクセス。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.facebook.com/apps"&gt;https://developers.facebook.com/apps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;右上の登録ボタンからfacebook開発者への登録を許可する&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_02.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_03.png" /&gt;&lt;/p&gt;

&lt;p&gt;開発者への登録が完了すると、Add a New Appのページが出てくるので、&lt;br&gt;
ここからリンクさせたいサイトの設定を行います。&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_04.png" /&gt;&lt;/p&gt;

&lt;p&gt;該当のサイト名等を画面に従って入力していきます。&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_05.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_06.png" /&gt;&lt;/p&gt;

&lt;p&gt;設定が完了すると下記のように、該当サイトの設定ページが出てきます。&lt;br&gt;
現在、ploudblogは公開ステータスとなっていますが、この部分は初期の段階では&lt;br&gt;
一般に対しては未公開となっているので、ここを公開ステータスへ変更。&lt;br&gt;
公開ステータスへの変更は画面左のメニューバー、アプリレビューより。&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_07.png" /&gt;&lt;/p&gt;

&lt;p&gt;公開しますか？→はいに変更して、完了です！&lt;/p&gt;

&lt;p&gt;&lt;img alt="アプリ設定" src="/images/./2016/0624_facebookSARE/appConfiguration_08.png" /&gt;&lt;/p&gt;

&lt;p&gt;これで無事ブログのシェア機能が使えるようになりました〜！&lt;br&gt;
ただ、今の状態だとどのページでシェアをしても、同じ記事内容＆画像が出てきてしまうのです...&lt;/p&gt;

&lt;p&gt;恐らくOGP（Open Graph protocol）の設定する必要があるので、&lt;br&gt;
これについてはまた別途進めていこうと思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>【IDCFクラウド】cloudstack-apiで仮想マシンにパブリックIPを付与する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/20/associate-a-publicip-to-the-virtualmachine-by-cloudstack-api.html"/>
    <id>http://blog.url.com/2016/06/20/associate-a-publicip-to-the-virtualmachine-by-cloudstack-api.html</id>
    <published>2016-06-20T09:00:00+09:00</published>
    <updated>2016-06-27T14:08:56+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回、&lt;a href="http://blog.proudit.jp/2016/06/14/make-virtual-machine-by-cloudstack-api.html"&gt;【IDCFクラウド】cloudstack-apiで仮想マシンを作成する。&lt;/a&gt;では&lt;em&gt;cloudstack-api&lt;/em&gt;コマンドで仮想マシンを作成しました。&lt;br&gt;
今回はその続編として、作成した仮想マシンにパブリックIPを付与したいと思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="事前確認"&gt;事前確認&lt;/h2&gt;

&lt;p&gt;まずは現在のパブリックIPを確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------+
|    ipaddress    |
+-----------------+
| ***.***.***.*** |
+-----------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="パブリックipの取得"&gt;パブリックIPの取得&lt;/h2&gt;

&lt;p&gt;パブリックIPの取得は&lt;code&gt;associateIpAddress&lt;/code&gt;コマンドで行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api associateIpAddress \
 --zoneid a53ff3d3-042b-4cbd-ad16-494bb8d33e06
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "associateipaddressresponse": {
    "id": "061c31aa-aa41-4e03-a274-83b17b58c1a3",
    "jobid": "b32b867c-07d4-412e-b514-94a1eee62ed1"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--zoneid&lt;/td&gt;
&lt;td&gt;ゾーンID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;簡単に説明すると、&lt;/p&gt;

&lt;p&gt;「&lt;em&gt;radian&lt;/em&gt;ゾーンにパブリックIPを割り当てる（取得する）」&lt;/p&gt;

&lt;p&gt;という内容になります。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;先ほどの&lt;code&gt;listPublicIpAddresses&lt;/code&gt;コマンドで確認してみましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress,id,virtualmachinename
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+--------------------------------------+--------------------+
|   ipaddress    |                  id                  | virtualmachinename |
+----------------+--------------------------------------+--------------------+
| 210.129.19.191 | 061c31aa-aa41-4e03-a274-83b17b58c1a3 | None               |
| ***.***.***.***| ********-****-****-****-************ | None               |
+----------------+--------------------------------------+--------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;210.129.19.191&lt;/code&gt; のIPが割り当てられているのが確認できました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="nat設定"&gt;NAT設定&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;取得が確認できたら次はNATの設定です。&lt;br&gt;
パブリックIPを仮想マシンへ割り当てます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api enableStaticNat \
--ipaddressid 061c31aa-aa41-4e03-a274-83b17b58c1a3 \
--virtualmachineid b1230e50-f75b-4343-8d6e-ca7a4efcf2b0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "enablestaticnatresponse": {
    "success": "true"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--ipaddressid&lt;/td&gt;
&lt;td&gt;パブリックIPアドレスID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--virtualmachineid&lt;/td&gt;
&lt;td&gt;仮想マシンID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;戻り値で&lt;code&gt;&amp;quot;success&amp;quot;: &amp;quot;true&amp;quot;&lt;/code&gt;となっていれば完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="確認"&gt;確認&lt;/h2&gt;

&lt;p&gt;先ほど実行した戻り値でも確認はできていますが、一応&lt;code&gt;listPublicIpAddresses&lt;/code&gt;コマンドでも確認しましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listPublicIpAddresses -t ipaddress,id,virtualmachinename,virtualmachinedisplayname
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------+--------------------------------------+--------------------+----------+---------------------------+
|   ipaddress    |                  id                  | virtualmachinename | hostname | virtualmachinedisplayname |
+----------------+--------------------------------------+--------------------+----------+---------------------------+
| 210.129.19.191 | 061c31aa-aa41-4e03-a274-83b17b58c1a3 | test-host          | None     | create-test               |
| ***.***.***.***| ********-****-****-****-************ | None               | None     | None                      |
+----------------+--------------------------------------+--------------------+----------+---------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで、先ほど取得したパブリックIPアドレスが割り当てられているのを確認できました。&lt;br&gt;
ここで出力している項目ですが&lt;em&gt;virtualmachinename&lt;/em&gt;はサーバ自身の&lt;em&gt;hostname&lt;/em&gt;となります。コンソールで表示される「仮想マシン名」は&lt;em&gt;virtualmachinedisplayname&lt;/em&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;仮想マシンにパブリックIPが付与されたのでこれで外部との通信経路が用意されました。&lt;br&gt;
ですが実はまだ通信はできません。。。FWで許可されていないからです。&lt;br&gt;
ということで、次回はFWの設定をcloudstack-apiで行いたいと思います。&lt;br&gt;
&lt;a href="http://blog.proudit.jp/2016/06/27/setting-the-fw-in-the-cloudstack-api.html"&gt;&amp;gt;&amp;gt;【IDCFクラウド】cloudstack-apiでFWの設定をする。&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JavaScript、jQueryについてまとめ</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/15/javascript&amp;jQuery.html"/>
    <id>http://blog.url.com/2016/06/15/javascript&amp;jQuery.html</id>
    <published>2016-06-15T09:00:00+09:00</published>
    <updated>2016-06-23T15:32:57+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;前回の記事でvalidationを使ったフォームチェックの実装について紹介しましたが、&lt;br&gt;
そもそもJavaScriptってなんだろうというところ、まとめました。&lt;/p&gt;

&lt;p&gt;以前から耳にすることはあったし、プログラミング言語なんだろうな、くらいの認識はありましたが、詳しいことはまったく知らなかったので。&lt;/p&gt;

&lt;p&gt;いい機会なので備忘録として簡単にまとめてみます。&lt;/p&gt;

&lt;h1 id="javascriptとは"&gt;JavaScriptとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;主にWebページに組み込まれたプログラムをWebブラウザ上で実行するために用いられるプログラミング言語の一つ。&lt;br&gt;
サイト構築で使われる多くの言語とは使用される場所が違い、クライアントサイドで動く言語です。&lt;br&gt;
サーバサイドは、サーバの中で実行されますが、クライアントサイドはユーザのブラウザ上で、&lt;br&gt;
ブラウザの更新の必要なく実行することができる。&lt;/p&gt;

&lt;p&gt;JavaScriptはサーバサイドで利用することもできるそうです。&lt;/p&gt;

&lt;p&gt;主な働きとして、webページに動きをつけるために用いられ、クリックやタップ時のページ上の挙動の制御やアニメーションの実行、フォームのエラーチェックなどで活躍します。&lt;br&gt;
&lt;a href="http://press.share-wis.com/why-you-should-learn-javascript"&gt;http://press.share-wis.com/why-you-should-learn-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;サーバ側で処理することなくwebページに動きのある動作をつけることができるんですね。&lt;/p&gt;

&lt;p&gt;現在はパソコン自体もスペックが上がってきているため、&lt;br&gt;
ブラウザが処理を行ってもそれほど負担にもならず、むしろサーバ側の負担がかからないように、ブラウザ上でできる処理はそこで実行させてしまう、という構成が多くなってきている。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id="jqueryとは"&gt;jQueryとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptで作られたプログラムで、JavaScriptよりも扱いやすくしたファイル。&lt;br&gt;
JavaScriptのライブラリで、&lt;br&gt;
よく利用されるスクリプトを簡単にまとめたもの。&lt;br&gt;
同じ動きを実現させる場合でも、複雑なJavaScriptのコードを書かなくてもライブラリを用いることによりもっと簡単にJavaScriptを使うことができるのです。&lt;/p&gt;

&lt;p&gt;ライブラリを利用することにより、開発効率もあがり、時間短縮もできてしまうのでとても便利ですね。&lt;/p&gt;

&lt;p&gt;jQueryの主な機能としては&lt;/p&gt;

&lt;p&gt;・DOM（Document Object Model）：HTMLを操作する&lt;br&gt;
・アニメーション：要素をアニメーションさせる&lt;br&gt;
・Ajax：外部ファイルをダイナミックに読み込む&lt;/p&gt;

&lt;p&gt;その他にも様々な機能があり、JSライブラリの中でも代表的なライブラリ。&lt;/p&gt;

&lt;p&gt;先日jQuery 3.0版のリリースもありましたね！&lt;br&gt;
3.0版ではIE8以前のものは動作しなくなっているようです。&lt;br&gt;
&lt;a href="https://osdn.jp/magazine/16/06/13/183000"&gt;https://osdn.jp/magazine/16/06/13/183000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;他にもJavaScriptのライブラリはたくさんあり、その年によりトレンドもあるようです。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.buildinsider.net/web/popularjslib/2016"&gt;http://www.buildinsider.net/web/popularjslib/2016&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="終わりに"&gt;終わりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;まだまだ入り口に過ぎませんが、今まで何気なく利用していたwebサイトですがクライアントサイドだけでこんなに動きのあるものが実装されているなんて意識していませんでした。&lt;/p&gt;

&lt;p&gt;これを機に少しずつ知識を深めていきたいです。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>【IDCFクラウド】cloudstack-apiで仮想マシンを作成する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/14/make-virtual-machine-by-cloudstack-api.html"/>
    <id>http://blog.url.com/2016/06/14/make-virtual-machine-by-cloudstack-api.html</id>
    <published>2016-06-14T09:00:00+09:00</published>
    <updated>2016-06-27T14:07:09+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;cloudstack-apiで仮想マシンの構築を行いたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="基本情報"&gt;基本情報&lt;/h2&gt;

&lt;p&gt;ということで、今回は以下の情報をもとに仮想マシンのを作成を行います。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;項目　　　　　　　&lt;/th&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ゾーン　　　　　　　　　&lt;/td&gt;
&lt;td&gt;radian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;インスタンス&lt;/td&gt;
&lt;td&gt;light.S1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;テンプレート&lt;/td&gt;
&lt;td&gt;Ubuntu Server 14.04 LTS 64-bit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;10.13.0.50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所属グループ&lt;/td&gt;
&lt;td&gt;test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ホスト名&lt;/td&gt;
&lt;td&gt;test-name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ディスプレイ名&lt;/td&gt;
&lt;td&gt;create-test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;キーペア&lt;/td&gt;
&lt;td&gt;hogehoge&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="事前確認"&gt;事前確認&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;仮想マシンを作成する前にまず、現在IDCFクラウドでの稼働状況を確認しておきたいと思います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listVirtualMachines -t name
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;no data found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;現在、環境内には１台も仮想マシンが作成されていないため&lt;em&gt;no data found&lt;/em&gt;となっています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="仮想マシンの作成"&gt;仮想マシンの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;それでは仮想マシンを作成しましょう。&lt;/p&gt;

&lt;p&gt;作成には&lt;code&gt;createInstanceGroup&lt;/code&gt;を利用します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api deployVirtualMachine \
--zoneid a53ff3d3-042b-4cbd-ad16-494bb8d33e06 \
--serviceofferingid e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6 \
--templateid 6eee3f7d-2193-4df7-81d5-bc2169ac3380 \
--ipaddress 10.13.0.50 \
--name test-host \
--keypair hogehoge \
--displayname create-test \
--group test
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "deployvirtualmachineresponse": {
    "id": "b1230e50-f75b-4343-8d6e-ca7a4efcf2b0",
    "jobid": "dee8c58d-069a-408a-98c3-03ea1e4e3c50"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回指定したオプションについての説明は以下のとおりです。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--zoneid&lt;/td&gt;
&lt;td&gt;ゾーン環境ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--serviceofferingid&lt;/td&gt;
&lt;td&gt;インスタンスID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--templateid&lt;/td&gt;
&lt;td&gt;テンプレートのID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ipaddress&lt;/td&gt;
&lt;td&gt;IPアドレス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--name&lt;/td&gt;
&lt;td&gt;ホスト名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--keypair&lt;/td&gt;
&lt;td&gt;デフォルト(root)で利用するキーペア&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--displayname&lt;/td&gt;
&lt;td&gt;コンソール画面で表示される名前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--group&lt;/td&gt;
&lt;td&gt;仮想マシンが所属するグループ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;簡単に説明すると、&lt;/p&gt;

&lt;p&gt;・&lt;em&gt;ipaddress&lt;/em&gt;オプションで仮想マシンに&lt;code&gt;10.13.0.50&lt;/code&gt;のIPアドレスを付与&lt;br&gt;
・SSHログインするために必要なデフォルトキーは&lt;code&gt;hogehoge&lt;/code&gt;を配置&lt;br&gt;
・&lt;em&gt;name&lt;/em&gt;オプションでSSHログインした際に表示されるホスト名を&lt;code&gt;test-host&lt;/code&gt;に設定&lt;/p&gt;

&lt;p&gt;といった内容になります。&lt;/p&gt;

&lt;p&gt;また、仮想マシンに直接影響はありませんが、&lt;/p&gt;

&lt;p&gt;・&lt;em&gt;group&lt;/em&gt;オプションで仮想マシンを&lt;code&gt;test&lt;/code&gt;にグルーピング&lt;br&gt;
・&lt;em&gt;diplayname&lt;/em&gt;オプションでコンソール画面での表示を&lt;code&gt;create-test&lt;/code&gt;に設定&lt;/p&gt;

&lt;p&gt;を行っています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="確認"&gt;確認&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;確認はコンソールおよびコマンドでも可能です。&lt;/p&gt;

&lt;h3 id="コンソール画面で確認"&gt;コンソール画面で確認&lt;/h3&gt;

&lt;p&gt;&lt;img alt="cloudstack-api_createvm01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/39962077-6be0-39ff-bba7-87d00e4823b7.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="コマンドで確認"&gt;コマンドで確認&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cloudstack-api listVirtualMachines -t name,keypair,displayname,group
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------+----------+-------------+-------+
|    name   | keypair  | displayname | group |
+-----------+----------+-------------+-------+
| test-host | hogehoge | create-test | test  |
+-----------+----------+-------------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;今回、仮想マシンを作成しましたが、このままではグローバルIPが無いため外部との通信ができません。&lt;br&gt;
次回は仮想マシンをグローバルIPに付与するところをcloudstack-apiコマンドで行いたいと思います。&lt;br&gt;
&lt;a href="http://blog.proudit.jp/2016/06/20/associate-a-publicip-to-the-virtualmachine-by-cloudstack-api.html"&gt;&amp;gt;&amp;gt;【IDCFクラウド】cloudstack-apiで仮想マシンにパブリックIPを付与する。&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ミネラル醤(ひしお)講座</title>
    <link rel="alternate" href="http://blog.url.com/2016/06/09/hisio-seminer.html"/>
    <id>http://blog.url.com/2016/06/09/hisio-seminer.html</id>
    <published>2016-06-09T09:00:00+09:00</published>
    <updated>2016-06-14T12:33:23+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="醤(ひしお)講座を開催しました！"&gt;醤(ひしお)講座を開催しました！&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;講師は弊社COOでもあり醸せ師のあき先生！！&lt;/p&gt;

&lt;p&gt;わたしは数ヶ月前に受講済みなのですが、&lt;br&gt;
さらに知識を深めるべく参加させて頂きました。&lt;/p&gt;

&lt;p&gt;醤は味噌と醤油の原型ともいえる、発酵食の基礎のようなもの。&lt;br&gt;
火を入れずそのまま使えば醤油の味、火を通せば味噌の味！&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;醤の歴史からはじまり、麹のお話、醤の活用法、&lt;br&gt;
などなど盛りだくさん！興味深いお話に皆さん聞き入っていました。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;そして最後はお待ちかねの醤づくり！&lt;br&gt;
完成までは２週間かかるので、それぞれお持ち帰り頂き、&lt;br&gt;
お家で引き続き醤さんを育てて頂きます！完成がたのしみですね！&lt;br&gt;
今回材料の中にドテラ社のミネラルを加えました。&lt;br&gt;
とっても贅沢です！&lt;br&gt;
1日たってみて、前回に比べ醤の成長具合が早い気がしています。&lt;br&gt;
やはりミネラルの力なのでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;img alt="醤講座" src="/images/./2016/0610_hisio_seminar/hisio.jpeg" /&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;また皆さんが他に気にされていたのが普段使う調味料について。&lt;br&gt;
お醤油、みりん、お酒、塩、砂糖...etc&lt;/p&gt;

&lt;p&gt;日常的に使うものだからこそ、ちゃんとしたものを使いたい&lt;br&gt;
という思いを皆さん持たれているようでした。&lt;br&gt;
&lt;br&gt;&lt;br&gt;
食は私たちの生活の中で一番基本となるもの。&lt;br&gt;
健康にいい！！という食品や情報があふれている世の中で、&lt;br&gt;
自分にとって家族にとって何が一番有益であるのか、&lt;br&gt;
情報を選択する上でしっかりとした情報を得ることは&lt;br&gt;
とても大切なこと。&lt;/p&gt;

&lt;p&gt;ご興味ある方は是非一度弊社までお問い合わせください！&lt;/p&gt;
</content>
  </entry>
</feed>
