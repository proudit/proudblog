<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-05-09T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>第２回 AWSとIDCFをVPN接続する - AWS準備編（全４回）</title>
    <link rel="alternate" href="http://blog.url.com/2016/05/09/how-the-vpn-connection-to-AWS-and-IDCF-2.html"/>
    <id>http://blog.url.com/2016/05/09/how-the-vpn-connection-to-AWS-and-IDCF-2.html</id>
    <published>2016-05-09T09:00:00+09:00</published>
    <updated>2016-05-09T12:37:00+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href="http://qiita.com/kooohei/items/906a6ce1352285e793d5"&gt;&amp;lt;&amp;lt; 前回：第１回 AWSとIDCFをVPN接続する - IDCF準備編（全４回）&lt;/a&gt;&lt;br&gt;
IDCFクラウドにVyOSで仮想マシンを作成して、IDCFクラウドとAWSをVPNで接続する設定を説明します。&lt;br&gt;
&lt;img alt="idcf-vpn-1.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/9b15d672-f654-ab05-fb61-57cf8951b58e.png" /&gt;&lt;br&gt;
前回はIDCF側にVyOSを利用してVPNゲートウェイを作成しました。&lt;br&gt;
&lt;img alt="idcf-vpn-2.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/903a6791-fb65-6fd3-5ecd-566c1a605c52.png" /&gt;&lt;/p&gt;

&lt;p&gt;今回はAWS側のVPNゲートウェイの作成を行います。&lt;br&gt;
&lt;img alt="idcf-vpn-3.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/a8160ab4-f708-851a-40a1-a2239a67e2f5.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="ゲートウェイの作成---aws"&gt;ゲートウェイの作成 - AWS&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;・AWSマネージメントコンソールにログインします。&lt;br&gt;
&lt;a href="https://signin.aws.amazon.com/"&gt;https://signin.aws.amazon.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「サービス &amp;gt; すべてのAWSサービス &amp;gt; VPC」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_2_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/3c1e1978-9981-2dc9-4bc2-9a80f2f581f1.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「仮想プライベートゲートウェイ &amp;gt; 仮想プライベートゲートウェイの作成」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_2_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/84c49d16-2f80-28a5-c581-7c1034ab22c4.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「ネームタグ」を入力し「作成」をクリックします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ネームタグ：VGW-ToIDCF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_2_03.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/7865dcbf-7799-2053-cfbf-5cbd6bd402d9.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_2_04.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/0dcf384c-7121-e8e7-388a-47c72f1f4236.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「カスタマーゲートウェイ &amp;gt; カスタマーゲートウェイの作成」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_2_05.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/bbe6ee08-bd67-7e9f-aea2-4ae2c2e9596c.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・各項目を入力し「作成」をクリックします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ネームタグ：VPNRouterToIDCF
ルーティング：静的(ここでは動的どちらでもOK)
IPアドレス：xxx.xxx.xxx.xxx（VPN-IDCFのIPを入力）※
BGP ASN：65000(動的の場合は指定)
※第１回 AWSとIDCFをVPN接続する（全４回）の「IPアドレスの設定」で取得したIPです。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_2_06.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/60665788-eb03-624a-7740-c617535df9d7.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_2_07.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/0a040c13-9c94-4ee7-da69-e2442031abc9.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・VPN接続の作成：「VPN接続 &amp;gt; VPN接続の作成」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_2_08.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/18e8f26e-49e1-4c9d-36fc-ffcf48f1f57d.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・各項目を入力し「作成」をクリックします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ネームタグ：VPNConnectToIDCF
仮想プライベートゲートウェイ：さっき作成した仮想プライベートゲートウェイ
カスタマーゲートウェイ：既存(さっき作成したカスタマーゲートウェイ)
ルーティングオプション：動的(BGPが必要)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_2_09.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/c85f1397-8f10-d704-4192-e9c0257d9121.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・設定のダウンロード&lt;br&gt;
作成したVPN接続を選択し「設定のダウンロード」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_2_10.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/45699772-b199-d6ef-0210-e3aecfde52d9.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・Vyattaを選択し「ダウンロード」をクリックしてConfigをダウンロードします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ベンダー：Vyatta
プラットフォーム：Vyatta Network OS
ソフトウェア：Vyatta Network OS 6.5+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_2_12.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/d1da47b7-051b-d5a4-de57-79f72ac46887.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="vpcへのアタッチ"&gt;VPCへのアタッチ&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;・対象となる「仮想プライベートゲートウェイ」を選択して「VPCにアタッチ」します。&lt;br&gt;
&lt;img alt="idcf-vpn_3_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/b5a6bb85-ec13-83bb-ba6a-0f0decd0af5d.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・アタッチしたい「VPC」を選んで「アタッチ」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_3_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/f5d48024-7396-4036-9c8b-50bf6bddbf69.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;これでAWS側のVPNゲートウェイの作成が完了しました。あとは両方で作成したVPNゲートウェイを繋げる設定をしてあげるだけです。&lt;/p&gt;

&lt;p&gt;ということで次回はIDCF側で作成したVPNゲートウェイに繋げるための設定を行います。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://qiita.com/kooohei/items/f16dcb9e7280b29deee7"&gt;&amp;gt;&amp;gt; 次回：第３回 AWSとIDCFをVPN接続する - VPN接続編（全４回）&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>第１回 AWSとIDCFをVPN接続する - IDCF準備編（全４回）</title>
    <link rel="alternate" href="http://blog.url.com/2016/05/02/how-the-vpn-connection-to-AWS-and-IDCF-1.html"/>
    <id>http://blog.url.com/2016/05/02/how-the-vpn-connection-to-AWS-and-IDCF-1.html</id>
    <published>2016-05-02T09:00:00+09:00</published>
    <updated>2016-05-09T12:37:17+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;IDCFクラウドにVyOSで仮想マシンを作成して、IDCFクラウドとAWSをVPNで接続する設定を説明します。&lt;br&gt;
&lt;img alt="idcf-vpn-1.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/9b15d672-f654-ab05-fb61-57cf8951b58e.png" /&gt;&lt;br&gt;
できるだけ行っていることが意識しやすいように作業ポイントごとに回を区切っています。&lt;br&gt;
今回はIDCFクラウドで仮想マシンを作成し、グローバルIPアドレスを付与しFWの設定まで行います。&lt;br&gt;
&lt;img alt="idcf-vpn-2.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/903a6791-fb65-6fd3-5ecd-566c1a605c52.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="ゲートウェイの作成---idcf"&gt;ゲートウェイの作成 - IDCF&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;IDCFクラウドでは仮想マシンでVyOSが選択できるのでそれを利用します。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="仮想マシンの作成"&gt;仮想マシンの作成&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;・IDCF クラウドにログインします。&lt;br&gt;
&lt;a href="https://account.idcfcloud.com/"&gt;https://account.idcfcloud.com/&lt;/a&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_00.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/14be8274-6b3c-bc32-5a40-2260daa2f051.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「コンピューティング」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/43a362af-8f77-5bea-0cf8-c800b7c81e52.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「仮想マシンの作成」をクリックします。（左右どちらでもOKです。）&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/7f671fe5-d7a5-a66c-f352-b7d9ba5762c9.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・以下の情報を入力し「確認画面へ」をクリックします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;マシンタイプ：Light（light.S1）
イメージ：その他（VyOS  1.1.3 64-bit）
ボリューム： -
SSH Key：SSH Key選択（今回は事前に用意していたのを利用）
仮想マシン台数：1
ネットワークインターフェース：radian-network1（今回はデフォルトで用意されているNWを選択）
詳細情報：マシン名１ VPN-ToAWS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_1-1_03.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/7e55e559-412e-9d0f-ca87-98c2b62e8e16.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_04.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/ae2d311f-62cb-c581-8ae2-63b7856eb8a0.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_05.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/be27ebf2-83f0-c239-2d23-3498f472958d.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_06.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/5c87f2c9-e073-7e61-bf83-019821763867.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_07.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/e2c47ce6-7fd8-9fcf-c779-c58193a27ef8.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_08.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/bf3cfa22-1e05-e24d-ce78-1fe15b58cf14.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_09.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/e86ed5a9-f660-a71d-2135-6f32f675215f.png" /&gt;&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_10.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/5d6a9ff8-9214-969e-efc1-b6cb8492ac0d.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・内容を確認しOKであれば「作成」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-1_11.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/a64b4ce0-4892-6887-9f29-ecd829841090.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="ipアドレスの設定"&gt;IPアドレスの設定&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;・「IPアドレス &amp;gt; IPアドレスの取得」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-2_01.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/07d6794b-b879-f36a-4785-2e0bb94174a3.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・IPアドレス名の入力、ゾーンとネットワークを選択し「取得する」をクリックします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IPアドレス名：VPN-IDCF
ゾーン：radian
ネットワーク：radian-network1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_1-2_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/8645e217-5952-842e-1d63-f9654c9d8b69.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「はい」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-2_03.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/942402b6-bd04-f810-dcc6-97d4cb56b371.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・取得した「IPアドレス」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-2_04.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/70c9d053-4532-86de-192f-f06392d4348a.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「NAT」をクリックし、先ほど作成した仮想マシンを選択して「有効化」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-2_05.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/4d02ded3-ac82-4b4b-ff71-c8aa409886ae.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
・「はい」をクリックします。&lt;br&gt;
&lt;img alt="idcf-vpn_1-2_06.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/820ca11d-cbf1-254a-ca5c-fb2cfab98a17.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="fwの設定"&gt;FWの設定&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;・「ファイアウォール」でポートの許可を設定します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[コメント]        [ソースCIDR]  [タイプ]  [ポートレンジ]
NAT Traversal  0.0.0.0/0    UDP      4500
NAT Traversal  0.0.0.0/0    UDP      500
SSH            接続元IP      TCP      22
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt="idcf-vpn_1-3_02.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/2037ff02-908e-afe1-06de-fafa1f985985.png" /&gt;&lt;/p&gt;

&lt;p&gt;ここでSSHを許可していますが、これは作業するための設定です。全て(全４回)が完了したら削除しましょう。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;今回は基本的にIDCFクラウドで仮想マシンを作成するための作業と同じです。&lt;br&gt;
VyOSでFWでポート4500(UDP)とポート500(UDP)を許可しているのがVPN特有の設定です。&lt;/p&gt;

&lt;p&gt;次回はAWS側でゲートウェイを準備します。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://qiita.com/kooohei/items/fbc6b32f5a70bf3cfa20"&gt;&amp;gt;&amp;gt; 第２回 AWSとIDCFをVPN接続する - AWS準備編（全４回）&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>DevOpsってなんだろう？</title>
    <link rel="alternate" href="http://blog.url.com/2016/04/28/What's-DevOps.html"/>
    <id>http://blog.url.com/2016/04/28/What's-DevOps.html</id>
    <published>2016-04-28T09:00:00+09:00</published>
    <updated>2016-05-07T22:18:34+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;数年前からよく耳にするようになったDevOps。&lt;br&gt;
実際私はここ1年の間に初めて出会ったコトバです。一体何なんでしょう？&lt;/p&gt;

&lt;p&gt;調べて自分なりに解釈した内容を簡単にまとめてみました。&lt;br&gt;
それではいってみましょー。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DevOpsとは、開発（Development）と運用（Operations）
が協力し、ビジネス要求に対して、より柔軟に、
スピーディに対応できるシステムを作り上げるためのプラクティス。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;引用元：&lt;a href="http://www.atmarkit.co.jp/ait/articles/1307/02/news002.html"&gt;http://www.atmarkit.co.jp/ait/articles/1307/02/news002.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;方法論のようなものなのでしょうか。&lt;/p&gt;

&lt;h1 id="誤解されてきたdevops"&gt;誤解されてきたDevOps&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;調べていくと諸説あり、2013年から現在まで考え方も変わってきているようです。&lt;br&gt;
変わっている、というよりしっかりと理解されていなかった、という意見がちらほら。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;DevOpsという考え方が日本に入ってきた当初は、このツールを使ったからDevOps！自動化したからDevOps！といった解釈が一人歩きしてしまい、本質よりも先にその解釈が浸透してしまっていたようです。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id="結局devopsってなんなの？"&gt;結局DevOpsってなんなの？&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;一体何をすることなのか？何を使えば？といった方法論が多く語られていますが、&lt;br&gt;
実は一番大切なのは&lt;em&gt;「なぜやる必要があるのか？」&lt;/em&gt;という部分のようです。&lt;br&gt;
単なるツールや、プラクティス、開発と運用の協力、という単純な話ではないみたい。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;DevOpsの本質は、&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;「10deploys/Day」1日に10回デプロイできること。
10回に限らず、1日のうちに何度でもデプロイすること。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;スピードのある開発を目指しましょう。&lt;/p&gt;

&lt;p&gt;いかに早く新規サービスを作り出し、いかに早く、多くの変更を加えてサービスを成長させていくことができるのか。&lt;br&gt;
最終的な目的は「ビジネスの成長」ということですかね。&lt;/p&gt;

&lt;p&gt;これを実現するために自動化や、ツールの導入、組織や文化をどうするのか、etc...&lt;br&gt;
ここへきて初めてツール云々の話になるんですね。&lt;/p&gt;

&lt;p&gt;DevOpsと一言にいっても、会社により実践方法は様々あっていい。&lt;br&gt;
やり方が違っても、DevOpsに対する解釈は大きな違いがないのです。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="さいごに"&gt;さいごに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;色々調べてみるとかなり奥が深かったDdvOps...&lt;/p&gt;

&lt;p&gt;今後ますます加速していくであろうサービス開発にきっちり対応し、&lt;br&gt;
より良いサービスを作る、様々なビジネスチャンスを生み出していけるようにしていこう！&lt;/p&gt;

&lt;p&gt;そこでわたしたち運用会社もその助けができるよう、更には自分たちも&lt;br&gt;
飛躍していけるように頑張っていかなくてはいけないんだなと、感じました。&lt;/p&gt;

&lt;p&gt;他の業界よりもスピード感があるIT業界ですが、今後どのように成長していくのかとても楽しみです。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
★今回参考にさせて頂いたサイト&lt;br&gt;
&lt;a href="http://www.atmarkit.co.jp/ait/articles/1512/17/news160.html"&gt;http://www.atmarkit.co.jp/ait/articles/1512/17/news160.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.atmarkit.co.jp/ait/articles/1512/23/news026.html"&gt;http://www.atmarkit.co.jp/ait/articles/1512/23/news026.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://it.impressbm.co.jp/articles/-/12455"&gt;http://it.impressbm.co.jp/articles/-/12455&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>dockerのインストール for MacOS</title>
    <link rel="alternate" href="http://blog.url.com/2016/04/25/docker-how-to-install.html"/>
    <id>http://blog.url.com/2016/04/25/docker-how-to-install.html</id>
    <published>2016-04-25T09:00:00+09:00</published>
    <updated>2016-05-07T22:18:34+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Docker ToolboxでMac OS Xにdockerをインストールを行います。&lt;/p&gt;

&lt;p&gt;1.まずDocker Toolboxのページへ行きます。&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.docker.com/docker-toolbox"&gt;https://www.docker.com/docker-toolbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.Download(Mac)ボタンを押してダウンロードをします。&lt;br&gt;&lt;br&gt;
&lt;img alt="docker-toolbox1-300x249.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/71cea7b3-8213-7410-c8c6-ff2ce6ec9a99.png" /&gt;&lt;/p&gt;

&lt;p&gt;3.ダウンロードしたパッケージをクリックしてインストーラーを起動させます。&lt;/p&gt;

&lt;p&gt;4.起動したらナビゲーションに従い進みます。&lt;br&gt;
&lt;img alt="docker-toolbox2-300x211.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/95a753cc-9409-efe1-3c97-e3141dc88a00.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="docker-toolbox3-300x211.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/44be53e3-4788-3ae3-def9-2439c60aa2b2.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="docker-toolbox4-300x214.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/3f808694-d676-1ce8-aba2-2ff6d0940ac5.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="docker-toolbox6-300x214.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/fac6e78a-5e39-c63f-4449-6bfc3633d2f2.png" /&gt;&lt;/p&gt;

&lt;p&gt;5.インストールが完了するとLaunchpadに「Docker Quickstart Terminal」「Kitematic」「VirtualBox」の３つがインストールされます。&lt;br&gt;
&lt;img alt="docker-toolbox7-300x83.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/0a4784c9-dff8-7d7c-ed16-37bd7db04a17.png" /&gt;&lt;/p&gt;

&lt;p&gt;6.「Docker Quickstart Terminal」をクリックするとTerminalが立ち上がり、VirtualBox上にDocker環境が構築されます。&lt;br&gt;
&lt;img alt="docker-toolbox8-300x233.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/d2ed5332-439f-35eb-7730-1e1da9251b9d.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="docker-toolbox9-300x235.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/bd9974f9-dae7-122d-8385-38b80193e584.png" /&gt;&lt;/p&gt;

&lt;p&gt;以上、dockerのインストールが完了です。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>opensslコマンドでCSRを作成する</title>
    <link rel="alternate" href="http://blog.url.com/2016/04/22/create-csr-openssl.html"/>
    <id>http://blog.url.com/2016/04/22/create-csr-openssl.html</id>
    <published>2016-04-22T09:00:00+09:00</published>
    <updated>2016-05-07T22:18:34+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;&lt;font size=2&gt;&lt;br&gt;
以前からCSRの作成はやったことがありますが、opensslコマンドでの作成は初めて。&lt;br&gt;
(今までは用意されていたシェルを利用していました。)&lt;br&gt;
備忘録として一連の作業内容を記録したいと思います。&lt;/p&gt;

&lt;p&gt;unix系のOSでは標準で利用できるようですが、windows上で利用する場合はアプリケーションのインストールが必要となるようです。&lt;br&gt;
&lt;a href="https://jp.globalsign.com/support/faq/177.html"&gt;https://jp.globalsign.com/support/faq/177.html&lt;/a&gt;&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;

&lt;h2 id="事前準備"&gt;事前準備&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;　・サーバキーペア用パスフレーズ&lt;br&gt;
　・DN情報&lt;/p&gt;

&lt;p&gt;※今回bit数は2048bitを指定、アルゴリズムはsha-2で作成します。&lt;/p&gt;

&lt;h1 id="さっそく作成"&gt;さっそく作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;まずopensslがちゃんと利用できるのかコマンドを入れてみました。&lt;br&gt;
試しにダウンロードされているバージョンを確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ openssl version
OpenSSL 0.9.8zg 14 July 2015
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;font size=2&gt;　&lt;br&gt;
今回、普段使っているMAC上で作成を行ったので、デスクトップに&lt;a href="http://www.proudit.jpというディレクトリを作り、そこで作業をしました。"&gt;www.proudit.jpというディレクトリを作り、そこで作業をしました。&lt;/a&gt;&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;まずキーペアの作成を行います。&lt;/p&gt;

&lt;p&gt;※2048bitを指定&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ openssl genrsa -des3 2048 &amp;gt; www.proudit.jp.key

Generating RSA private key, 2048 bit long modulus
...............................................+++
......................+++
e is 65537 (0x10001)
Enter pass phrase:
Verifying - Enter pass phrase:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;続いてCSRの作成です。&lt;br&gt;
コマンド入力後、DN情報を入力します。&lt;/p&gt;

&lt;p&gt;※アルゴリズムはsha-2としますので、-sha256と記述します&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
$ openssl req -new -key www.proudit.jp.key -sha256 -out www.proudit.jp.csr
Enter pass phrase for www.proudit.jp.key:
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:JP
State or Province Name (full name) [Some-State]:Tokyo
Locality Name (eg, city) []:Shinjuku-ku
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Proudit Inc.
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:www.proudit.jp
Email Address []:

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CSRの内容を確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
$ openssl req -text -noout -in /Users/ayako/Desktop/www.proudit.jp/www.proudit.jp.csr

Certificate Request:
    Data:
        Version: 0 (0x0)
        Subject: C=JP, ST=Tokyo, L=Shinjuku-ku, O=Proudit Inc., CN=www.proudit.jp
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
            RSA Public Key: (2048 bit)
                Modulus (2048 bit):

　　　　　　　　　　　　　※�略※     
      Signature Algorithm: sha256WithRSAEncryption 
　　　　　　　　　　　　　※略※       
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DN情報、bit数、アルゴリズム、指定通りで作成されていることが確認できました！&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;opensslでCSRを作るの案外簡単でした。&lt;/p&gt;

&lt;p&gt;とは言え、参考資料からコマンドをコピペしてるのに、unknown optionと言われてしまい、手打ちしなきゃならなかったり、&lt;br&gt;
手打ちしたらしたで一文字抜けてたり、。資料どおりにやっているのにスムーズにはいかないという・・・。&lt;/p&gt;

&lt;p&gt;エラーが出る度、「なぜだーー？！」とぐるぐる考えたり。&lt;/p&gt;

&lt;p&gt;難しいですよね。ほんと。&lt;br&gt;
素人からしたらもうこれだけで精一杯です。&lt;/p&gt;

&lt;p&gt;周りに助けられながら無事に終わりました。&lt;br&gt;
次回からはもうこれで大丈夫！！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>s3cmdをインストールしてIDCFクラウドのオブジェクトストレージにバケットを作成する。</title>
    <link rel="alternate" href="http://blog.url.com/2016/04/20/make-bucket-by-s3cmd.html"/>
    <id>http://blog.url.com/2016/04/20/make-bucket-by-s3cmd.html</id>
    <published>2016-04-20T09:00:00+09:00</published>
    <updated>2016-05-07T22:18:34+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;コマンドを利用してIDCFクラウドのオブジェクトストレージへアクセスするにはs3cmdを利用するのが一般的のようです。&lt;br&gt;
一応、IDCフロンティアのサイトにも載ってました。&lt;br&gt;
&lt;a href="http://www.idcf.jp/help/storage/guide/s3cmd_guide.html"&gt;IDCF - [Linux]サードパーティのツールご利用ガイド s3cmd のご利用方法&lt;/a&gt;&lt;br&gt;
とはいえ、動作保証やサポートはされていないみたいですが。。。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="オブジェクトストレージとは"&gt;オブジェクトストレージとは&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;ファイルシステムのようにデータをファイルやブロック単位で扱うのではなく、オブジェクトという単位で扱うストレージです。&lt;br&gt;
また、ファイルシステムではないので階層構造がなく、オブジェクト同士はフラットな関係になっています。&lt;br&gt;
基本的にデータサイズや保存数に制限がないため、大容量のデータを扱うことに適しています。&lt;br&gt;
今回は&lt;a href="http://www.idcf.jp/cloud/storage/"&gt;IDCFクラウドのオブジェクトストレージ&lt;/a&gt;ですが、他にも&lt;a href="https://aws.amazon.com/jp/s3/"&gt;AWSのAmazon S3&lt;/a&gt;や&lt;a href="https://azure.microsoft.com/ja-jp/services/storage/"&gt;MicrosoftのAzure Storage&lt;/a&gt;などが有名です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="s3cmdインストール"&gt;s3cmdインストール&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;とりあえず今回はMacOSとUbuntuのインストールを行いました。&lt;br&gt;
&lt;strong&gt;・MacOSの場合&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo brew install s3cmd
==&amp;gt; Downloading https://homebrew.bintray.com/bottles/s3cmd-1.6.0.el_capitan.bottle.tar.gz
######################################################################## 100.0%
==&amp;gt; Pouring s3cmd-1.6.0.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/s3cmd/1.6.0: 55 files, 738.3K
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;・Ubuntuの場合&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ apt-get install s3cmd
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following NEW packages will be installed:
  s3cmd
0 upgraded, 1 newly installed, 0 to remove and 202 not upgraded.
Need to get 67.6 kB of archives.
After this operation, 295 kB of additional disk space will be used.
Get:1 http://jp.archive.ubuntu.com/ubuntu/ trusty/universe s3cmd all 1.1.0~beta3-2 [67.6 kB]
Fetched 67.6 kB in 0s (1,018 kB/s)
Selecting previously unselected package s3cmd.
(Reading database ... 91433 files and directories currently installed.)
Preparing to unpack .../s3cmd_1.1.0~beta3-2_all.deb ...
Unpacking s3cmd (1.1.0~beta3-2) ...
Processing triggers for man-db (2.6.7.1-1) ...
Setting up s3cmd (1.1.0~beta3-2) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=".s3cfgの作成"&gt;.s3cfgの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;インストールができたので、次はs3cmdの設定ファイルとなる.s3cfgを作成します。&lt;br&gt;
作成は以下のコマンドで行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd --configure

Enter new values or accept defaults in brackets with Enter.
Refer to user manual for detailed description of all options.

Access key and Secret key are your identifiers for Amazon S3
Access Key: ********************
Secret Key: ****************************************

Encryption password is used to protect your files from reading
by unauthorized persons while in transfer to S3
Encryption password:
Path to GPG program [/usr/bin/gpg]:

When using secure HTTPS protocol all communication with Amazon S3
servers is protected from 3rd party eavesdropping. This method is
slower than plain HTTP and can't be used if you're behind a proxy
Use HTTPS protocol [No]:

On some networks all internet access must go through a HTTP proxy.
Try setting it here if you can't conect to S3 directly
HTTP Proxy server name:

New settings:
  Access Key: ********************
  Secret Key: ****************************************
  Encryption password:
  Path to GPG program: /usr/bin/gpg
  Use HTTPS protocol: False
  HTTP Proxy server name:
  HTTP Proxy server port: 0

Test access with supplied credentials? [Y/n] n

Save settings? [y/N] y
Configuration saved to '/hogehoge/.s3cfg'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="設定の修正"&gt;設定の修正&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;.s3cfgのhost_baseとhost_bucketの値をIDCFのエンドポイントに変更します。&lt;br&gt;
エンドポイントは&lt;br&gt;
「IDCF管理画面 &amp;gt; オブジェクトストレージ &amp;gt; APIユーザー」で対象となるAPIユーザー名をクリックすると確認できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd ~/
$ vi .s3cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[変更前]
host_base = s3.amazonaws.com
host_bucket = %(bucket)s.s3.amazonaws.com

[変更後]
host_base = ds.jp-east.idcfcloud.com
host_bucket = %(bucket)s.ds.jp-east.idcfcloud.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、プライベートコネクトを利用する場合はhost_bucketのエンドポイントの最後を「.local」にする必要があります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;host_bucket = %(bucket)s.ds.jp-east.idcfcloud.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;*実際にプライベートコネクトを利用する場合は他にも申請やサーバー設定などが必要となります。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="バケット参照"&gt;バケット参照&lt;/h1&gt;

&lt;hr&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;はじめはバケットがないため、コマンドを実行しても何も返ってきません。&lt;br&gt;
ただ、もし.s3cfgを変更せずにバケット参照すると以下のようにERRORとなります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd ls
ERROR: S3 error: 403 (InvalidAccessKeyId): The AWS Access Key Id you provided does not exist in our records.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="バケットの作成"&gt;バケットの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;ということで、バケットを作成してみます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd mb s3://proudit-test
Bucket 's3://proudit-test/' created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再度バケットを参照すると作成できているのが確認できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd ls
2016-04-13 05:01  s3://proudit-test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="バケットの削除"&gt;バケットの削除&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;とりあえず今回は作成まで確認できたので削除します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd rb s3://proudit-test
Bucket 's3://proudit-test/' removed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参照すると何も返ってこないので削除されたのが確認できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ s3cmd ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上で完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;とりあえず、今回はs3cmdをインストールしてバケットの作成・削除だけ行いました。&lt;br&gt;
s3cmdのコマンドについてIDCフロンティアのサイトに載っていますので、その他のコマンドについて知りたい方はそちらを参照していただければと思います。&lt;br&gt;
&lt;a href="https://www.faq.idcf.jp/app/answers/detail/a_id/360/~/s3cmdのコマンド一覧"&gt;IDCF - s3cmdのコマンド一覧&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、awsコマンドを利用してもオブジェクトストレージにアクセスできるみたいです。&lt;br&gt;
&lt;a href="http://inaba-serverdesign.jp/blog/20151212/s3cmd_awscli_s3_idcf.html"&gt;s3cmdじゃなくてawscli s3を使おう～IDCFクラウドオブジェクトストレージでも&lt;/a&gt;&lt;br&gt;
しかも検証によるとそっちの方が早いという結果が出たとのこと。&lt;br&gt;
そこについては今度自分でも検証しようと思います。&lt;/p&gt;
</content>
  </entry>
</feed>
